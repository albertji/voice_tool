{"version":3,"sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/./src/util/index.js","webpack://WaveSurfer/./src/util/observer.js","webpack://WaveSurfer/./src/util/request-animation-frame.js","webpack://WaveSurfer/./src/webaudio.js","webpack://WaveSurfer/./src/wavesurfer.js","webpack://WaveSurfer/./src/util/ajax.js","webpack://WaveSurfer/./src/util/get-id.js","webpack://WaveSurfer/./src/util/max.js","webpack://WaveSurfer/./src/util/min.js","webpack://WaveSurfer/./src/util/extend.js","webpack://WaveSurfer/./src/util/style.js","webpack://WaveSurfer/./src/util/frame.js","webpack://WaveSurfer/./node_modules/debounce/index.js","webpack://WaveSurfer/./src/util/prevent-click.js","webpack://WaveSurfer/./src/drawer.multicanvas.js","webpack://WaveSurfer/./src/drawer.js","webpack://WaveSurfer/./src/mediaelement.js","webpack://WaveSurfer/./src/peakcache.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_ajax","_interopRequireDefault","_getId","_max","_min","_observer","_extend","_style","_requestAnimationFrame","_frame","_debounce","_preventClick","Observer","_classCallCheck","this","handlers","event","fn","_this","push","callback","un","e","length","splice","handler","_this2","on","_len","arguments","args","Array","_key","apply","setTimeout","_len2","_key2","forEach","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","element","util","_interopRequireWildcard","PLAYING","PAUSED","FINISHED","WebAudio","params","_this$stateBehaviors","_this$states","_possibleConstructorReturn","_getPrototypeOf","audioContext","offlineAudioContext","stateBehaviors","_defineProperty","init","addOnAudioProcess","getPlayedPercents","duration","getDuration","getCurrentTime","startPosition","getPlayedTime","removeOnAudioProcess","fireEvent","ac","getAudioContext","lastPlay","currentTime","scheduledPause","states","analyser","buffer","filters","gainNode","mergedPeaks","offlineAc","peaks","playbackRate","scriptNode","source","splitPeaks","state","explicitDuration","AudioContext","webkitAudioContext","WaveSurferAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","createVolumeNode","createScriptNode","createAnalyserNode","setState","setPlaybackRate","audioRate","setLength","filter","disconnect","connect","setFilters","disconnectFilters","reduce","prev","curr","audioScriptProcessor","createScriptProcessor","scriptBufferSize","createJavaScriptNode","destination","onaudioprocess","time","pause","createAnalyser","createGain","createGainNode","deviceId","audio","Audio","setSinkId","Promise","reject","Error","autoplay","dest","createMediaStreamDestination","srcObject","stream","gain","setValueAtTime","arraybuffer","errback","getOfflineAudioContext","decodeAudioData","data","channels","numberOfChannels","first","last","newBuffer","createBuffer","sampleSize","sampleStep","chan","getChannelData","start","end","min","max","j","splitChannels","isPaused","unAll","disconnectSource","closeAudioContext","close","createSource","createBufferSource","noteGrainOn","stop","noteOff","adjustedTime","seekTo","resume","play","_drawer","_webaudio","_mediaelement","_peakcache","WaveSurfer","defaultParams","autoCenter","backend","barHeight","barGap","container","cursorColor","cursorWidth","dragSelection","fillParent","forceDecode","height","hideScrollbar","interact","loopSelection","maxCanvasWidth","mediaContainer","mediaControls","mediaType","minPxPerSec","normalize","partialRender","pixelRatio","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","progressColor","removeMediaElementOnDestroy","renderer","MultiCanvas","responsive","scrollParent","skipLength","waveColor","xhr","backends","MediaElement","extend","document","querySelector","savedVolume","isMuted","tmpEvents","currentAjax","drawer","peakCache","Drawer","Backend","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","wrapper","clientWidth","_assertThisInitialized","registerPlugins","createDrawer","createBackend","createPeakCache","plugin","addPlugin","deferInit","initPlugin","_this3","instance","concat","staticProps","keys","pluginStaticProp","Instance","getOwnPropertyNames","destroyPlugin","destroy","_this4","_this5","addEventListener","drawBuffer","progress","_this6","supportsWebAudio","PeakCache","seconds","_this7","skip","offset","position","Math","seekAndCenter","recenter","_this8","isFinite","console","error","paused","oldScrollParent","newVolume","setVolume","getVolume","rate","getPlaybackRate","setMute","mute","color","updateCursor","setHeight","nominalWidth","round","parentWidth","getWidth","width","getScrollX","newRanges","addRangeToPeakCache","getPeaks","drawPeaks","pxPerSec","_this9","decodeArrayBuffer","loadDecodedBuffer","load","blob","_this10","reader","FileReader","onProgress","loadArrayBuffer","target","result","readAsArrayBuffer","empty","url","preload","preloadIgnoreReasons","Preload is not 'auto', 'none' or 'metadata'","indexOf","Peaks are not provided","Backend is not of type MediaElement","Url is not of type string","activeReasons","reason","warn","join","loadBuffer","loadMediaElement","_this11","action","once","getArrayBuffer","setPeaks","urlOrElt","_this12","elt","loadElt","src","err","_this13","_this14","ajax","responseType","statusText","percentComplete","lengthComputable","loaded","total","accuracy","noWindow","arr","map","val","json","JSON","stringify","open","encodeURIComponent","format","quality","getImage","abort","cancelAjax","clearTmpEvents","setWidth","destroyAllPlugins","removeEventListener","VERSION","__VERSION__","options","XMLHttpRequest","fired100","method","requestHeaders","header","setRequestHeader","withCredentials","status","response","send","random","toString","substring","values","largest","Infinity","smallest","Number","sources","el","styles","prop","style","func","default","wait","immediate","timeout","context","timestamp","later","Date","now","debounced","callNow","clear","clearTimeout","flush","preventClickHandler","stopPropagation","body","maxCanvasElementWidth","hasProgressCanvas","halfPixel","canvases","progressWave","createWrapper","createElements","appendChild","createElement","zIndex","left","top","bottom","overflow","display","boxSizing","borderRightStyle","pointerEvents","addCanvas","borderRightWidth","borderRightColor","totalWidth","requiredCanvases","ceil","removeCanvas","entry","canvasWidth","updateDimensions","clearWaveForEntry","leftOffset","wave","waveCtx","getContext","progressCtx","lastEntry","pop","parentElement","removeChild","elementWidth","canvas","offsetLeft","clearRect","channelIndex","prepareDraw","_ref","absmax","hasMinVals","offsetY","halfH","undefined","peakIndexScale","bar","barWidth","step","scale","peak","floor","h","fillRect","_ref2","reflectedPeaks","len","drawLine","setFillStyles","drawLineToContext","ctx","canvasStart","canvasEnd","beginPath","moveTo","lineTo","closePath","fill","x","y","startCanvas","endCanvas","intersection","x1","y1","x2","y2","fillRectToContext","frame","channelPeaks","some","fillStyle","type","images","toDataURL","lastPos","userSelect","webkitUserSelect","overflowX","overflowY","setupWrapperEvents","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","scrollLeft","scrollWidth","scrollbarHeight","offsetHeight","clientHeight","clientY","handleEvent","clearWave","drawBars","drawWave","percent","recenterOnPosition","half","maxScroll","updateSize","minPxDelta","pos","newPos","updateProgress","parentNode","media","volume","toLowerCase","elementPosition","onPlayEnd","createTimer","onAudioProcess","controls","prevMedia","_load","seekable","clearPlayEnd","promise","setPlayEnd","_onPlayEnd","_get","clearPeakCache","peakCacheRanges","peakCacheLength","uncachedRanges","item","sort","a","b","uncachedRangePairs","peakCacheRangePairs"],"mappings":"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","file":"wavesurfer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","export { default as ajax } from './ajax';\r\nexport { default as getId } from './get-id';\r\nexport { default as max } from './max';\r\nexport { default as min } from './min';\r\nexport { default as Observer } from './observer';\r\nexport { default as extend } from './extend';\r\nexport { default as style } from './style';\r\nexport { default as requestAnimationFrame } from './request-animation-frame';\r\nexport { default as frame } from './frame';\r\nexport { default as debounce } from 'debounce';\r\nexport { default as preventClick } from './prevent-click';\r\n","/**\r\n * @typedef {Object} ListenerDescriptor\r\n * @property {string} name The name of the event\r\n * @property {function} callback The callback\r\n * @property {function} un The function to call to remove the listener\r\n */\r\n\r\n/**\r\n * Observer class\r\n */\r\nexport default class Observer {\r\n  /**\r\n   * Instantiate Observer\r\n   */\r\n  constructor() {\r\n    /**\r\n     * @private\r\n     * @todo Initialise the handlers here already and remove the conditional\r\n     * assignment in `on()`\r\n     */\r\n    this.handlers = null;\r\n  }\r\n  /**\r\n   * Attach a handler function for an event.\r\n   *\r\n   * @param {string} event Name of the event to listen to\r\n   * @param {function} fn The callback to trigger when the event is fired\r\n   * @return {ListenerDescriptor}\r\n   */\r\n  on(event, fn) {\r\n    if (!this.handlers) {\r\n      this.handlers = {};\r\n    }\r\n\r\n    let handlers = this.handlers[event];\r\n    if (!handlers) {\r\n      handlers = this.handlers[event] = [];\r\n    }\r\n    handlers.push(fn);\r\n\r\n    // Return an event descriptor\r\n    return {\r\n      name: event,\r\n      callback: fn,\r\n      un: (e, fn) => this.un(e, fn)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Remove an event handler.\r\n   *\r\n   * @param {string} event Name of the event the listener that should be\r\n   * removed listens to\r\n   * @param {function} fn The callback that should be removed\r\n   */\r\n  un(event, fn) {\r\n    if (!this.handlers) {\r\n      return;\r\n    }\r\n\r\n    const handlers = this.handlers[event];\r\n    let i;\r\n    if (handlers) {\r\n      if (fn) {\r\n        for (i = handlers.length - 1; i >= 0; i--) {\r\n          if (handlers[i] == fn) {\r\n            handlers.splice(i, 1);\r\n          }\r\n        }\r\n      } else {\r\n        handlers.length = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove all event handlers.\r\n   */\r\n  unAll() {\r\n    this.handlers = null;\r\n  }\r\n\r\n  /**\r\n   * Attach a handler to an event. The handler is executed at most once per\r\n   * event type.\r\n   *\r\n   * @param {string} event The event to listen to\r\n   * @param {function} handler The callback that is only to be called once\r\n   * @return {ListenerDescriptor}\r\n   */\r\n  once(event, handler) {\r\n    const fn = (...args) => {\r\n      /*  eslint-disable no-invalid-this */\r\n      handler.apply(this, args);\r\n      /*  eslint-enable no-invalid-this */\r\n      setTimeout(() => {\r\n        this.un(event, fn);\r\n      }, 0);\r\n    };\r\n    return this.on(event, fn);\r\n  }\r\n\r\n  /**\r\n   * Manually fire an event\r\n   *\r\n   * @param {string} event The event to fire manually\r\n   * @param {...any} args The arguments with which to call the listeners\r\n   */\r\n  fireEvent(event, ...args) {\r\n    if (!this.handlers) {\r\n      return;\r\n    }\r\n    const handlers = this.handlers[event];\r\n    handlers &&\r\n      handlers.forEach(fn => {\r\n        fn(...args);\r\n      });\r\n  }\r\n}\r\n","/**\r\n * Returns the requestAnimationFrame function for the browser, or a shim with\r\n * setTimeout if none is found\r\n *\r\n * @return {function}\r\n */\r\nexport default (\r\n  window.requestAnimationFrame ||\r\n  window.webkitRequestAnimationFrame ||\r\n  window.mozRequestAnimationFrame ||\r\n  window.oRequestAnimationFrame ||\r\n  window.msRequestAnimationFrame ||\r\n  ((callback, element) => setTimeout(callback, 1000 / 60))\r\n).bind(window);\r\n","import * as util from './util';\r\n\r\n// using consts to prevent someone writing the string wrong\r\nconst PLAYING = 'playing';\r\nconst PAUSED = 'paused';\r\nconst FINISHED = 'finished';\r\n\r\n/**\r\n * WebAudio backend\r\n *\r\n * @extends {Observer}\r\n */\r\nexport default class WebAudio extends util.Observer {\r\n  /** @private */\r\n  static scriptBufferSize = 256;\r\n  /** @private */\r\n  audioContext = null;\r\n  /** @private */\r\n  offlineAudioContext = null;\r\n  /** @private */\r\n  stateBehaviors = {\r\n    [PLAYING]: {\r\n      init() {\r\n        this.addOnAudioProcess();\r\n      },\r\n      getPlayedPercents() {\r\n        const duration = this.getDuration();\r\n        return this.getCurrentTime() / duration || 0;\r\n      },\r\n      getCurrentTime() {\r\n        return this.startPosition + this.getPlayedTime();\r\n      }\r\n    },\r\n    [PAUSED]: {\r\n      init() {\r\n        this.removeOnAudioProcess();\r\n      },\r\n      getPlayedPercents() {\r\n        const duration = this.getDuration();\r\n        return this.getCurrentTime() / duration || 0;\r\n      },\r\n      getCurrentTime() {\r\n        return this.startPosition;\r\n      }\r\n    },\r\n    [FINISHED]: {\r\n      init() {\r\n        this.removeOnAudioProcess();\r\n        this.fireEvent('finish');\r\n      },\r\n      getPlayedPercents() {\r\n        return 1;\r\n      },\r\n      getCurrentTime() {\r\n        return this.getDuration();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Does the browser support this backend\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  supportsWebAudio() {\r\n    return !!(window.AudioContext || window.webkitAudioContext);\r\n  }\r\n\r\n  /**\r\n   * Get the audio context used by this backend or create one\r\n   *\r\n   * @return {AudioContext}\r\n   */\r\n  getAudioContext() {\r\n    if (!window.WaveSurferAudioContext) {\r\n      window.WaveSurferAudioContext = new (window.AudioContext ||\r\n        window.webkitAudioContext)();\r\n    }\r\n    return window.WaveSurferAudioContext;\r\n  }\r\n\r\n  /**\r\n   * Get the offline audio context used by this backend or create one\r\n   *\r\n   * @param {number} sampleRate\r\n   * @return {OfflineAudioContext}\r\n   */\r\n  getOfflineAudioContext(sampleRate) {\r\n    if (!window.WaveSurferOfflineAudioContext) {\r\n      window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\r\n        window.webkitOfflineAudioContext)(1, 2, sampleRate);\r\n    }\r\n    return window.WaveSurferOfflineAudioContext;\r\n  }\r\n\r\n  /**\r\n   * Construct the backend\r\n   *\r\n   * @param {WavesurferParams} params\r\n   */\r\n  constructor(params) {\r\n    super();\r\n    /** @private */\r\n    this.params = params;\r\n    /** @private */\r\n    this.ac = params.audioContext || this.getAudioContext();\r\n    /**@private */\r\n    this.lastPlay = this.ac.currentTime;\r\n    /** @private */\r\n    this.startPosition = 0;\r\n    /** @private  */\r\n    this.scheduledPause = null;\r\n    /** @private */\r\n    this.states = {\r\n      [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\r\n      [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\r\n      [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\r\n    };\r\n    /** @private */\r\n    this.analyser = null;\r\n    /** @private */\r\n    this.buffer = null;\r\n    /** @private */\r\n    this.filters = [];\r\n    /** @private */\r\n    this.gainNode = null;\r\n    /** @private */\r\n    this.mergedPeaks = null;\r\n    /** @private */\r\n    this.offlineAc = null;\r\n    /** @private */\r\n    this.peaks = null;\r\n    /** @private */\r\n    this.playbackRate = 1;\r\n    /** @private */\r\n    this.analyser = null;\r\n    /** @private */\r\n    this.scriptNode = null;\r\n    /** @private */\r\n    this.source = null;\r\n    /** @private */\r\n    this.splitPeaks = [];\r\n    /** @private */\r\n    this.state = null;\r\n    /** @private */\r\n    this.explicitDuration = null;\r\n  }\r\n\r\n  /**\r\n   * Initialise the backend, called in `wavesurfer.createBackend()`\r\n   */\r\n  init() {\r\n    this.createVolumeNode();\r\n    this.createScriptNode();\r\n    this.createAnalyserNode();\r\n\r\n    this.setState(PAUSED);\r\n    this.setPlaybackRate(this.params.audioRate);\r\n    this.setLength(0);\r\n  }\r\n\r\n  /** @private */\r\n  disconnectFilters() {\r\n    if (this.filters) {\r\n      this.filters.forEach(filter => {\r\n        filter && filter.disconnect();\r\n      });\r\n      this.filters = null;\r\n      // Reconnect direct path\r\n      this.analyser.connect(this.gainNode);\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  setState(state) {\r\n    if (this.state !== this.states[state]) {\r\n      this.state = this.states[state];\r\n      this.state.init.call(this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unpacked `setFilters()`\r\n   *\r\n   * @param {...AudioNode} filters\r\n   */\r\n  setFilter(...filters) {\r\n    this.setFilters(filters);\r\n  }\r\n\r\n  /**\r\n   * Insert custom Web Audio nodes into the graph\r\n   *\r\n   * @param {AudioNode[]} filters Packed filters array\r\n   * @example\r\n   * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\r\n   * wavesurfer.backend.setFilter(lowpass);\r\n   */\r\n  setFilters(filters) {\r\n    // Remove existing filters\r\n    this.disconnectFilters();\r\n\r\n    // Insert filters if filter array not empty\r\n    if (filters && filters.length) {\r\n      this.filters = filters;\r\n\r\n      // Disconnect direct path before inserting filters\r\n      this.analyser.disconnect();\r\n\r\n      // Connect each filter in turn\r\n      filters\r\n        .reduce((prev, curr) => {\r\n          prev.connect(curr);\r\n          return curr;\r\n        }, this.analyser)\r\n        .connect(this.gainNode);\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  createScriptNode() {\r\n    if (this.params.audioScriptProcessor) {\r\n      this.scriptNode = this.params.audioScriptProcessor;\r\n    } else {\r\n      if (this.ac.createScriptProcessor) {\r\n        this.scriptNode = this.ac.createScriptProcessor(\r\n          WebAudio.scriptBufferSize\r\n        );\r\n      } else {\r\n        this.scriptNode = this.ac.createJavaScriptNode(\r\n          WebAudio.scriptBufferSize\r\n        );\r\n      }\r\n    }\r\n    this.scriptNode.connect(this.ac.destination);\r\n  }\r\n\r\n  /** @private */\r\n  addOnAudioProcess() {\r\n    this.scriptNode.onaudioprocess = () => {\r\n      const time = this.getCurrentTime();\r\n\r\n      if (time >= this.getDuration()) {\r\n        this.setState(FINISHED);\r\n        this.fireEvent('pause');\r\n      } else if (time >= this.scheduledPause) {\r\n        this.pause();\r\n      } else if (this.state === this.states[PLAYING]) {\r\n        this.fireEvent('audioprocess', time);\r\n      }\r\n    };\r\n  }\r\n\r\n  /** @private */\r\n  removeOnAudioProcess() {\r\n    this.scriptNode.onaudioprocess = null;\r\n  }\r\n\r\n  /** @private */\r\n  createAnalyserNode() {\r\n    this.analyser = this.ac.createAnalyser();\r\n    this.analyser.connect(this.gainNode);\r\n  }\r\n\r\n  /**\r\n   * Create the gain node needed to control the playback volume.\r\n   *\r\n   * @private\r\n   */\r\n  createVolumeNode() {\r\n    // Create gain node using the AudioContext\r\n    if (this.ac.createGain) {\r\n      this.gainNode = this.ac.createGain();\r\n    } else {\r\n      this.gainNode = this.ac.createGainNode();\r\n    }\r\n    // Add the gain node to the graph\r\n    this.gainNode.connect(this.ac.destination);\r\n  }\r\n\r\n  /**\r\n   * Set the sink id for the media player\r\n   *\r\n   * @param {string} deviceId String value representing audio device id.\r\n   */\r\n  setSinkId(deviceId) {\r\n    if (deviceId) {\r\n      /**\r\n       * The webaudio API doesn't currently support setting the device\r\n       * output. Here we create an HTMLAudioElement, connect the\r\n       * webaudio stream to that element and setSinkId there.\r\n       */\r\n      let audio = new window.Audio();\r\n      if (!audio.setSinkId) {\r\n        return Promise.reject(\r\n          new Error('setSinkId is not supported in your browser')\r\n        );\r\n      }\r\n      audio.autoplay = true;\r\n      var dest = this.ac.createMediaStreamDestination();\r\n      this.gainNode.disconnect();\r\n      this.gainNode.connect(dest);\r\n      audio.srcObject = dest.stream;\r\n\r\n      return audio.setSinkId(deviceId);\r\n    } else {\r\n      return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the audio volume\r\n   *\r\n   * @param {number} value A floating point value between 0 and 1.\r\n   */\r\n  setVolume(value) {\r\n    this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\r\n  }\r\n\r\n  /**\r\n   * Get the current volume\r\n   *\r\n   * @return {number} value A floating point value between 0 and 1.\r\n   */\r\n  getVolume() {\r\n    return this.gainNode.gain.value;\r\n  }\r\n\r\n  /** @private */\r\n  decodeArrayBuffer(arraybuffer, callback, errback) {\r\n    if (!this.offlineAc) {\r\n      this.offlineAc = this.getOfflineAudioContext(\r\n        this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100\r\n      );\r\n    }\r\n    this.offlineAc.decodeAudioData(\r\n      arraybuffer,\r\n      data => callback(data),\r\n      errback\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set pre-decoded peaks\r\n   *\r\n   * @param {number[]|number[][]} peaks\r\n   * @param {?number} duration\r\n   */\r\n  setPeaks(peaks, duration) {\r\n    this.explicitDuration = duration;\r\n    this.peaks = peaks;\r\n  }\r\n\r\n  /**\r\n   * Set the rendered length (different from the length of the audio).\r\n   *\r\n   * @param {number} length\r\n   */\r\n  setLength(length) {\r\n    // No resize, we can preserve the cached peaks.\r\n    if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\r\n      return;\r\n    }\r\n\r\n    this.splitPeaks = [];\r\n    this.mergedPeaks = [];\r\n    // Set the last element of the sparse array so the peak arrays are\r\n    // appropriately sized for other calculations.\r\n    const channels = this.buffer ? this.buffer.numberOfChannels : 1;\r\n    let c;\r\n    for (c = 0; c < channels; c++) {\r\n      this.splitPeaks[c] = [];\r\n      this.splitPeaks[c][2 * (length - 1)] = 0;\r\n      this.splitPeaks[c][2 * (length - 1) + 1] = 0;\r\n    }\r\n    this.mergedPeaks[2 * (length - 1)] = 0;\r\n    this.mergedPeaks[2 * (length - 1) + 1] = 0;\r\n  }\r\n\r\n  /**\r\n   * Compute the max and min value of the waveform when broken into <length> subranges.\r\n   *\r\n   * @param {number} length How many subranges to break the waveform into.\r\n   * @param {number} first First sample in the required range.\r\n   * @param {number} last Last sample in the required range.\r\n   * @return {number[]|number[][]} Array of 2*<length> peaks or array of arrays of\r\n   * peaks consisting of (max, min) values for each subrange.\r\n   */\r\n  getPeaks(length, first, last) {\r\n    if (this.peaks) {\r\n      return this.peaks;\r\n    }\r\n\r\n    first = first || 0;\r\n    last = last || length - 1;\r\n\r\n    this.setLength(length);\r\n\r\n    /**\r\n     * The following snippet fixes a buffering data issue on the Safari\r\n     * browser which returned undefined It creates the missing buffer based\r\n     * on 1 channel, 4096 samples and the sampleRate from the current\r\n     * webaudio context 4096 samples seemed to be the best fit for rendering\r\n     * will review this code once a stable version of Safari TP is out\r\n     */\r\n    if (!this.buffer.length) {\r\n      const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\r\n      this.buffer = newBuffer.buffer;\r\n    }\r\n\r\n    const sampleSize = this.buffer.length / length;\r\n    const sampleStep = ~~(sampleSize / 10) || 1;\r\n    const channels = this.buffer.numberOfChannels;\r\n    let c;\r\n\r\n    for (c = 0; c < channels; c++) {\r\n      const peaks = this.splitPeaks[c];\r\n      const chan = this.buffer.getChannelData(c);\r\n      let i;\r\n\r\n      for (i = first; i <= last; i++) {\r\n        const start = ~~(i * sampleSize);\r\n        const end = ~~(start + sampleSize);\r\n        let min = 0;\r\n        let max = 0;\r\n        let j;\r\n\r\n        for (j = start; j < end; j += sampleStep) {\r\n          const value = chan[j];\r\n\r\n          if (value > max) {\r\n            max = value;\r\n          }\r\n\r\n          if (value < min) {\r\n            min = value;\r\n          }\r\n        }\r\n\r\n        peaks[2 * i] = max;\r\n        peaks[2 * i + 1] = min;\r\n\r\n        if (c == 0 || max > this.mergedPeaks[2 * i]) {\r\n          this.mergedPeaks[2 * i] = max;\r\n        }\r\n\r\n        if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\r\n          this.mergedPeaks[2 * i + 1] = min;\r\n        }\r\n      }\r\n    }\r\n\r\n    return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\r\n  }\r\n\r\n  /**\r\n   * Get the position from 0 to 1\r\n   *\r\n   * @return {number}\r\n   */\r\n  getPlayedPercents() {\r\n    return this.state.getPlayedPercents.call(this);\r\n  }\r\n\r\n  /** @private */\r\n  disconnectSource() {\r\n    if (this.source) {\r\n      this.source.disconnect();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This is called when wavesurfer is destroyed\r\n   */\r\n  destroy() {\r\n    if (!this.isPaused()) {\r\n      this.pause();\r\n    }\r\n    this.unAll();\r\n    this.buffer = null;\r\n    this.disconnectFilters();\r\n    this.disconnectSource();\r\n    this.gainNode.disconnect();\r\n    this.scriptNode.disconnect();\r\n    this.analyser.disconnect();\r\n\r\n    // close the audioContext if closeAudioContext option is set to true\r\n    if (this.params.closeAudioContext) {\r\n      // check if browser supports AudioContext.close()\r\n      if (\r\n        typeof this.ac.close === 'function' &&\r\n        this.ac.state != 'closed'\r\n      ) {\r\n        this.ac.close();\r\n      }\r\n      // clear the reference to the audiocontext\r\n      this.ac = null;\r\n      // clear the actual audiocontext, either passed as param or the\r\n      // global singleton\r\n      if (!this.params.audioContext) {\r\n        window.WaveSurferAudioContext = null;\r\n      } else {\r\n        this.params.audioContext = null;\r\n      }\r\n      // clear the offlineAudioContext\r\n      window.WaveSurferOfflineAudioContext = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loaded a decoded audio buffer\r\n   *\r\n   * @param {Object} buffer\r\n   */\r\n  load(buffer) {\r\n    this.startPosition = 0;\r\n    this.lastPlay = this.ac.currentTime;\r\n    this.buffer = buffer;\r\n    this.createSource();\r\n  }\r\n\r\n  /** @private */\r\n  createSource() {\r\n    this.disconnectSource();\r\n    this.source = this.ac.createBufferSource();\r\n\r\n    // adjust for old browsers\r\n    this.source.start = this.source.start || this.source.noteGrainOn;\r\n    this.source.stop = this.source.stop || this.source.noteOff;\r\n\r\n    this.source.playbackRate.setValueAtTime(\r\n      this.playbackRate,\r\n      this.ac.currentTime\r\n    );\r\n    this.source.buffer = this.buffer;\r\n    this.source.connect(this.analyser);\r\n  }\r\n\r\n  /**\r\n   * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  isPaused() {\r\n    return this.state !== this.states[PLAYING];\r\n  }\r\n\r\n  /**\r\n   * Used by `wavesurfer.getDuration()`\r\n   *\r\n   * @return {number}\r\n   */\r\n  getDuration() {\r\n    if (!this.buffer) {\r\n      if (this.explicitDuration) {\r\n        return this.explicitDuration;\r\n      }\r\n      return 0;\r\n    }\r\n    return this.buffer.duration;\r\n  }\r\n\r\n  /**\r\n   * Used by `wavesurfer.seekTo()`\r\n   *\r\n   * @param {number} start Position to start at in seconds\r\n   * @param {number} end Position to end at in seconds\r\n   * @return {{start: number, end: number}}\r\n   */\r\n  seekTo(start, end) {\r\n    if (!this.buffer) {\r\n      return;\r\n    }\r\n\r\n    this.scheduledPause = null;\r\n\r\n    if (start == null) {\r\n      start = this.getCurrentTime();\r\n      if (start >= this.getDuration()) {\r\n        start = 0;\r\n      }\r\n    }\r\n    if (end == null) {\r\n      end = this.getDuration();\r\n    }\r\n\r\n    this.startPosition = start;\r\n    this.lastPlay = this.ac.currentTime;\r\n\r\n    if (this.state === this.states[FINISHED]) {\r\n      this.setState(PAUSED);\r\n    }\r\n\r\n    return {\r\n      start: start,\r\n      end: end\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get the playback position in seconds\r\n   *\r\n   * @return {number}\r\n   */\r\n  getPlayedTime() {\r\n    return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\r\n  }\r\n\r\n  /**\r\n   * Plays the loaded audio region.\r\n   *\r\n   * @param {number} start Start offset in seconds, relative to the beginning\r\n   * of a clip.\r\n   * @param {number} end When to stop relative to the beginning of a clip.\r\n   */\r\n  play(start, end) {\r\n    if (!this.buffer) {\r\n      return;\r\n    }\r\n\r\n    // need to re-create source on each playback\r\n    this.createSource();\r\n\r\n    const adjustedTime = this.seekTo(start, end);\r\n\r\n    start = adjustedTime.start;\r\n    end = adjustedTime.end;\r\n\r\n    this.scheduledPause = end;\r\n\r\n    this.source.start(0, start, end - start);\r\n\r\n    if (this.ac.state == 'suspended') {\r\n      this.ac.resume && this.ac.resume();\r\n    }\r\n\r\n    this.setState(PLAYING);\r\n\r\n    this.fireEvent('play');\r\n  }\r\n\r\n  /**\r\n   * Pauses the loaded audio.\r\n   */\r\n  pause() {\r\n    this.scheduledPause = null;\r\n\r\n    this.startPosition += this.getPlayedTime();\r\n    this.source && this.source.stop(0);\r\n\r\n    this.setState(PAUSED);\r\n\r\n    this.fireEvent('pause');\r\n  }\r\n\r\n  /**\r\n   * Returns the current time in seconds relative to the audioclip's\r\n   * duration.\r\n   *\r\n   * @return {number}\r\n   */\r\n  getCurrentTime() {\r\n    return this.state.getCurrentTime.call(this);\r\n  }\r\n\r\n  /**\r\n   * Returns the current playback rate. (0=no playback, 1=normal playback)\r\n   *\r\n   * @return {number}\r\n   */\r\n  getPlaybackRate() {\r\n    return this.playbackRate;\r\n  }\r\n\r\n  /**\r\n   * Set the audio source playback rate.\r\n   *\r\n   * @param {number} value\r\n   */\r\n  setPlaybackRate(value) {\r\n    value = value || 1;\r\n    if (this.isPaused()) {\r\n      this.playbackRate = value;\r\n    } else {\r\n      this.pause();\r\n      this.playbackRate = value;\r\n      this.play();\r\n    }\r\n  }\r\n}\r\n","import * as util from './util';\r\nimport MultiCanvas from './drawer.multicanvas';\r\nimport WebAudio from './webaudio';\r\nimport MediaElement from './mediaelement';\r\nimport PeakCache from './peakcache';\r\n\r\n/*\r\n * This work is licensed under a BSD-3-Clause License.\r\n */\r\n\r\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\r\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\r\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\r\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\r\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\r\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\r\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\r\n\r\n/**\r\n * @typedef {Object} WavesurferParams\r\n * @property {AudioContext} audioContext=null Use your own previously\r\n * initialized AudioContext or leave blank.\r\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\r\n * slower.\r\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\r\n * initialized ScriptProcessorNode or leave blank.\r\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\r\n * waveform around the progress\r\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'` In most cases\r\n * you don't have to set this manually. MediaElement is a fallback for\r\n * unsupported browsers.\r\n * @property {number} barHeight=1 The height of the wave\r\n * @property {number} barGap=null The optional spacing between bars of the wave,\r\n * if not provided will be calculated in legacy format.\r\n * @property {boolean} closeAudioContext=false Close and nullify all audio\r\n * contexts when the destroy method is called.\r\n * @property {!string|HTMLElement} container CSS selector or HTML element where\r\n * the waveform should be drawn. This is the only required parameter.\r\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\r\n * the playhead position.\r\n * @property {number} cursorWidth=1 Measured in pixels.\r\n * @property {boolean} fillParent=true Whether to fill the entire container or\r\n * draw only according to `minPxPerSec`.\r\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\r\n * when zooming to get a more detailed waveform.\r\n * @property {number} height=128 The height of the waveform. Measured in\r\n * pixels.\r\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\r\n * scrollbar when one would normally be shown.\r\n * @property {boolean} interact=true Whether the mouse interaction will be\r\n * enabled at initialization. You can switch this parameter at any time later\r\n * on.\r\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\r\n * looping of selected regions\r\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\r\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\r\n * even integer). If the waveform is longer than this value, additional canvases\r\n * will be used to render the waveform, which is useful for very large waveforms\r\n * that may be too wide for browsers to draw on a single canvas.\r\n * @property {boolean} mediaControls=false (Use with backend `MediaElement`)\r\n * this enables the native controls for the media element\r\n * @property {string} mediaType='audio' (Use with backend `MediaElement`)\r\n * `'audio'|'video'`\r\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\r\n * audio.\r\n * @property {boolean} normalize=false If true, normalize by the maximum peak\r\n * instead of 1.0.\r\n * @property {boolean} partialRender=false Use the PeakCache to improve\r\n * rendering speed of large waveforms\r\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\r\n * calculate display\r\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\r\n * register during instantiation, they will be directly initialised unless they\r\n * are added with the `deferInit` property set to true.\r\n * @property {string} progressColor='#555' The fill color of the part of the\r\n * waveform behind the cursor.\r\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\r\n * media element in the DOM when the player is destroyed. This is useful when\r\n * reusing an existing media element via the `loadMediaElement` method.\r\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\r\n * renderer.\r\n * @property {boolean|number} responsive=false If set to `true` resize the\r\n * waveform, when the window is resized. This is debounced with a `100ms`\r\n * timeout by default. If this parameter is a number it represents that timeout.\r\n * @property {boolean} scrollParent=false Whether to scroll the container with a\r\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\r\n * (see fillParent).\r\n * @property {number} skipLength=2 Number of seconds to skip with the\r\n * skipForward() and skipBackward() methods.\r\n * @property {boolean} splitChannels=false Render with seperate waveforms for\r\n * the channels of the audio\r\n * @property {string} waveColor='#999' The fill color of the waveform after the\r\n * cursor.\r\n * @property {object} xhr={} XHR options.\r\n */\r\n\r\n/**\r\n * @typedef {Object} PluginDefinition\r\n * @desc The Object used to describe a plugin\r\n * @example wavesurfer.addPlugin(pluginDefinition);\r\n * @property {string} name The name of the plugin, the plugin instance will be\r\n * added as a property to the wavesurfer instance under this name\r\n * @property {?Object} staticProps The properties that should be added to the\r\n * wavesurfer instance as static properties\r\n * @property {?boolean} deferInit Don't initialise plugin\r\n * automatically\r\n * @property {Object} params={} The plugin parameters, they are the first parameter\r\n * passed to the plugin class constructor function\r\n * @property {PluginClass} instance The plugin instance factory, is called with\r\n * the dependency specified in extends. Returns the plugin class.\r\n */\r\n\r\n/**\r\n * @interface PluginClass\r\n *\r\n * @desc This is the interface which is implemented by all plugin classes. Note\r\n * that this only turns into an observer after being passed through\r\n * `wavesurfer.addPlugin`.\r\n *\r\n * @extends {Observer}\r\n */\r\nclass PluginClass {\r\n  /**\r\n   * Plugin definition factory\r\n   *\r\n   * This function must be used to create a plugin definition which can be\r\n   * used by wavesurfer to correctly instantiate the plugin.\r\n   *\r\n   * @param  {Object} params={} The plugin params (specific to the plugin)\r\n   * @return {PluginDefinition} an object representing the plugin\r\n   */\r\n  create(params) {}\r\n  /**\r\n   * Construct the plugin\r\n   *\r\n   * @param {Object} ws The wavesurfer instance\r\n   * @param {Object} params={} The plugin params (specific to the plugin)\r\n   */\r\n  constructor(ws, params) {}\r\n  /**\r\n   * Initialise the plugin\r\n   *\r\n   * Start doing something. This is called by\r\n   * `wavesurfer.initPlugin(pluginName)`\r\n   */\r\n  init() {}\r\n  /**\r\n   * Destroy the plugin instance\r\n   *\r\n   * Stop doing something. This is called by\r\n   * `wavesurfer.destroyPlugin(pluginName)`\r\n   */\r\n  destroy() {}\r\n}\r\n\r\n/**\r\n * WaveSurfer core library class\r\n *\r\n * @extends {Observer}\r\n * @example\r\n * const params = {\r\n *   container: '#waveform',\r\n *   waveColor: 'violet',\r\n *   progressColor: 'purple'\r\n * };\r\n *\r\n * // initialise like this\r\n * const wavesurfer = WaveSurfer.create(params);\r\n *\r\n * // or like this ...\r\n * const wavesurfer = new WaveSurfer(params);\r\n * wavesurfer.init();\r\n *\r\n * // load audio file\r\n * wavesurfer.load('example/media/demo.wav');\r\n */\r\nexport default class WaveSurfer extends util.Observer {\r\n  /** @private */\r\n  defaultParams = {\r\n    audioContext: null,\r\n    audioRate: 1,\r\n    autoCenter: true,\r\n    backend: 'WebAudio',\r\n    barHeight: 1,\r\n    barGap: null,\r\n    container: null,\r\n    cursorColor: '#333',\r\n    cursorWidth: 1,\r\n    dragSelection: true,\r\n    fillParent: true,\r\n    forceDecode: false,\r\n    height: 128,\r\n    hideScrollbar: false,\r\n    interact: true,\r\n    loopSelection: true,\r\n    maxCanvasWidth: 4000,\r\n    mediaContainer: null,\r\n    mediaControls: false,\r\n    mediaType: 'audio',\r\n    minPxPerSec: 20,\r\n    normalize: false,\r\n    partialRender: false,\r\n    pixelRatio:\r\n      window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\r\n    plugins: [],\r\n    progressColor: '#555',\r\n    removeMediaElementOnDestroy: true,\r\n    renderer: MultiCanvas,\r\n    responsive: false,\r\n    scrollParent: false,\r\n    skipLength: 2,\r\n    splitChannels: false,\r\n    waveColor: '#999',\r\n    xhr: {}\r\n  };\r\n\r\n  /** @private */\r\n  backends = {\r\n    MediaElement,\r\n    WebAudio\r\n  };\r\n\r\n  /**\r\n   * Instantiate this class, call its `init` function and returns it\r\n   *\r\n   * @param {WavesurferParams} params\r\n   * @return {Object} WaveSurfer instance\r\n   * @example const wavesurfer = WaveSurfer.create(params);\r\n   */\r\n  static create(params) {\r\n    const wavesurfer = new WaveSurfer(params);\r\n    return wavesurfer.init();\r\n  }\r\n\r\n  /**\r\n   * The library version number is available as a static property of the\r\n   * WaveSurfer class\r\n   *\r\n   * @type {String}\r\n   * @example\r\n   * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\r\n   */\r\n  static VERSION = __VERSION__;\r\n\r\n  /**\r\n   * Functions in the `util` property are available as a prototype property to\r\n   * all instances\r\n   *\r\n   * @type {Object}\r\n   * @example\r\n   * const wavesurfer = WaveSurfer.create(params);\r\n   * wavesurfer.util.style(myElement, { background: 'blue' });\r\n   */\r\n  util = util;\r\n\r\n  /**\r\n   * Functions in the `util` property are available as a static property of the\r\n   * WaveSurfer class\r\n   *\r\n   * @type {Object}\r\n   * @example\r\n   * WaveSurfer.util.style(myElement, { background: 'blue' });\r\n   */\r\n  static util = util;\r\n\r\n  /**\r\n   * Initialise wavesurfer instance\r\n   *\r\n   * @param {WavesurferParams} params Instantiation options for wavesurfer\r\n   * @example\r\n   * const wavesurfer = new WaveSurfer(params);\r\n   * @returns {this}\r\n   */\r\n  constructor(params) {\r\n    super();\r\n    /**\r\n     * Extract relevant parameters (or defaults)\r\n     * @private\r\n     */\r\n    this.params = util.extend({}, this.defaultParams, params);\r\n\r\n    /** @private */\r\n    this.container =\r\n      'string' == typeof params.container\r\n        ? document.querySelector(this.params.container)\r\n        : this.params.container;\r\n\r\n    if (!this.container) {\r\n      throw new Error('Container element not found');\r\n    }\r\n\r\n    if (this.params.mediaContainer == null) {\r\n      /** @private */\r\n      this.mediaContainer = this.container;\r\n    } else if (typeof this.params.mediaContainer == 'string') {\r\n      /** @private */\r\n      this.mediaContainer = document.querySelector(\r\n        this.params.mediaContainer\r\n      );\r\n    } else {\r\n      /** @private */\r\n      this.mediaContainer = this.params.mediaContainer;\r\n    }\r\n\r\n    if (!this.mediaContainer) {\r\n      throw new Error('Media Container element not found');\r\n    }\r\n\r\n    if (this.params.maxCanvasWidth <= 1) {\r\n      throw new Error('maxCanvasWidth must be greater than 1');\r\n    } else if (this.params.maxCanvasWidth % 2 == 1) {\r\n      throw new Error('maxCanvasWidth must be an even number');\r\n    }\r\n\r\n    /**\r\n     * @private Used to save the current volume when muting so we can\r\n     * restore once unmuted\r\n     * @type {number}\r\n     */\r\n    this.savedVolume = 0;\r\n\r\n    /**\r\n     * @private The current muted state\r\n     * @type {boolean}\r\n     */\r\n    this.isMuted = false;\r\n\r\n    /**\r\n     * @private Will hold a list of event descriptors that need to be\r\n     * cancelled on subsequent loads of audio\r\n     * @type {Object[]}\r\n     */\r\n    this.tmpEvents = [];\r\n\r\n    /**\r\n     * @private Holds any running audio downloads\r\n     * @type {Observer}\r\n     */\r\n    this.currentAjax = null;\r\n    /** @private */\r\n    this.arraybuffer = null;\r\n    /** @private */\r\n    this.drawer = null;\r\n    /** @private */\r\n    this.backend = null;\r\n    /** @private */\r\n    this.peakCache = null;\r\n\r\n    // cache constructor objects\r\n    if (typeof this.params.renderer !== 'function') {\r\n      throw new Error('Renderer parameter is invalid');\r\n    }\r\n    /**\r\n     * @private The uninitialised Drawer class\r\n     */\r\n    this.Drawer = this.params.renderer;\r\n    /**\r\n     * @private The uninitialised Backend class\r\n     */\r\n    this.Backend = this.backends[this.params.backend];\r\n\r\n    /**\r\n     * @private map of plugin names that are currently initialised\r\n     */\r\n    this.initialisedPluginList = {};\r\n    /** @private */\r\n    this.isDestroyed = false;\r\n    /** @private */\r\n    this.isReady = false;\r\n\r\n    // responsive debounced event listener. If this.params.responsive is not\r\n    // set, this is never called. Use 100ms or this.params.responsive as\r\n    // timeout for the debounce function.\r\n    let prevWidth = 0;\r\n    this._onResize = util.debounce(() => {\r\n      if (\r\n        prevWidth != this.drawer.wrapper.clientWidth &&\r\n        !this.params.scrollParent\r\n      ) {\r\n        prevWidth = this.drawer.wrapper.clientWidth;\r\n        this.drawer.fireEvent('redraw');\r\n      }\r\n    }, typeof this.params.responsive === 'number' ? this.params.responsive : 100);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Initialise the wave\r\n   *\r\n   * @example\r\n   * var wavesurfer = new WaveSurfer(params);\r\n   * wavesurfer.init();\r\n   * @return {this}\r\n   */\r\n  init() {\r\n    this.registerPlugins(this.params.plugins);\r\n    this.createDrawer();\r\n    this.createBackend();\r\n    this.createPeakCache();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\r\n   * this function is called in the init function of wavesurfer\r\n   *\r\n   * @param {PluginDefinition[]} plugins An array of plugin definitions\r\n   * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\r\n   * @return {this}\r\n   */\r\n  registerPlugins(plugins) {\r\n    // first instantiate all the plugins\r\n    plugins.forEach(plugin => this.addPlugin(plugin));\r\n\r\n    // now run the init functions\r\n    plugins.forEach(plugin => {\r\n      // call init function of the plugin if deferInit is falsey\r\n      // in that case you would manually use initPlugins()\r\n      if (!plugin.deferInit) {\r\n        this.initPlugin(plugin.name);\r\n      }\r\n    });\r\n    this.fireEvent('plugins-registered', plugins);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Add a plugin object to wavesurfer\r\n   *\r\n   * @param {PluginDefinition} plugin A plugin definition\r\n   * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\r\n   * @example wavesurfer.addPlugin(WaveSurfer.minimap());\r\n   * @return {this}\r\n   */\r\n  addPlugin(plugin) {\r\n    if (!plugin.name) {\r\n      throw new Error('Plugin does not have a name!');\r\n    }\r\n    if (!plugin.instance) {\r\n      throw new Error(\r\n        `Plugin ${plugin.name} does not have an instance property!`\r\n      );\r\n    }\r\n\r\n    // staticProps properties are applied to wavesurfer instance\r\n    if (plugin.staticProps) {\r\n      Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\r\n        /**\r\n         * Properties defined in a plugin definition's `staticProps` property are added as\r\n         * staticProps properties of the WaveSurfer instance\r\n         */\r\n        this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\r\n      });\r\n    }\r\n\r\n    const Instance = plugin.instance;\r\n\r\n    // turn the plugin instance into an observer\r\n    const observerPrototypeKeys = Object.getOwnPropertyNames(\r\n      util.Observer.prototype\r\n    );\r\n    observerPrototypeKeys.forEach(key => {\r\n      Instance.prototype[key] = util.Observer.prototype[key];\r\n    });\r\n\r\n    /**\r\n     * Instantiated plugin classes are added as a property of the wavesurfer\r\n     * instance\r\n     * @type {Object}\r\n     */\r\n    this[plugin.name] = new Instance(plugin.params || {}, this);\r\n    this.fireEvent('plugin-added', plugin.name);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Initialise a plugin\r\n   *\r\n   * @param {string} name A plugin name\r\n   * @emits WaveSurfer#plugin-initialised\r\n   * @example wavesurfer.initPlugin('minimap');\r\n   * @return {this}\r\n   */\r\n  initPlugin(name) {\r\n    if (!this[name]) {\r\n      throw new Error(`Plugin ${name} has not been added yet!`);\r\n    }\r\n    if (this.initialisedPluginList[name]) {\r\n      // destroy any already initialised plugins\r\n      this.destroyPlugin(name);\r\n    }\r\n    this[name].init();\r\n    this.initialisedPluginList[name] = true;\r\n    this.fireEvent('plugin-initialised', name);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Destroy a plugin\r\n   *\r\n   * @param {string} name A plugin name\r\n   * @emits WaveSurfer#plugin-destroyed\r\n   * @example wavesurfer.destroyPlugin('minimap');\r\n   * @returns {this}\r\n   */\r\n  destroyPlugin(name) {\r\n    if (!this[name]) {\r\n      throw new Error(\r\n        `Plugin ${name} has not been added yet and cannot be destroyed!`\r\n      );\r\n    }\r\n    if (!this.initialisedPluginList[name]) {\r\n      throw new Error(\r\n        `Plugin ${name} is not active and cannot be destroyed!`\r\n      );\r\n    }\r\n    if (typeof this[name].destroy !== 'function') {\r\n      throw new Error(`Plugin ${name} does not have a destroy function!`);\r\n    }\r\n\r\n    this[name].destroy();\r\n    delete this.initialisedPluginList[name];\r\n    this.fireEvent('plugin-destroyed', name);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Destroy all initialised plugins. Convenience function to use when\r\n   * wavesurfer is removed\r\n   *\r\n   * @private\r\n   */\r\n  destroyAllPlugins() {\r\n    Object.keys(this.initialisedPluginList).forEach(name =>\r\n      this.destroyPlugin(name)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Create the drawer and draw the waveform\r\n   *\r\n   * @private\r\n   * @emits WaveSurfer#drawer-created\r\n   */\r\n  createDrawer() {\r\n    this.drawer = new this.Drawer(this.container, this.params);\r\n    this.drawer.init();\r\n    this.fireEvent('drawer-created', this.drawer);\r\n\r\n    if (this.params.responsive !== false) {\r\n      window.addEventListener('resize', this._onResize, true);\r\n      window.addEventListener('orientationchange', this._onResize, true);\r\n    }\r\n\r\n    this.drawer.on('redraw', () => {\r\n      this.drawBuffer();\r\n      this.drawer.progress(this.backend.getPlayedPercents());\r\n    });\r\n\r\n    // Click-to-seek\r\n    this.drawer.on('click', (e, progress) => {\r\n      setTimeout(() => this.seekTo(progress), 0);\r\n    });\r\n\r\n    // Relay the scroll event from the drawer\r\n    this.drawer.on('scroll', e => {\r\n      if (this.params.partialRender) {\r\n        this.drawBuffer();\r\n      }\r\n      this.fireEvent('scroll', e);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create the backend\r\n   *\r\n   * @private\r\n   * @emits WaveSurfer#backend-created\r\n   */\r\n  createBackend() {\r\n    if (this.backend) {\r\n      this.backend.destroy();\r\n    }\r\n\r\n    // Back compat\r\n    if (this.params.backend == 'AudioElement') {\r\n      this.params.backend = 'MediaElement';\r\n    }\r\n\r\n    if (\r\n      this.params.backend == 'WebAudio' &&\r\n      !this.Backend.prototype.supportsWebAudio.call(null)\r\n    ) {\r\n      this.params.backend = 'MediaElement';\r\n    }\r\n\r\n    this.backend = new this.Backend(this.params);\r\n    this.backend.init();\r\n    this.fireEvent('backend-created', this.backend);\r\n\r\n    this.backend.on('finish', () => this.fireEvent('finish'));\r\n    this.backend.on('play', () => this.fireEvent('play'));\r\n    this.backend.on('pause', () => this.fireEvent('pause'));\r\n\r\n    this.backend.on('audioprocess', time => {\r\n      this.drawer.progress(this.backend.getPlayedPercents());\r\n      this.fireEvent('audioprocess', time);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create the peak cache\r\n   *\r\n   * @private\r\n   */\r\n  createPeakCache() {\r\n    if (this.params.partialRender) {\r\n      this.peakCache = new PeakCache();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the duration of the audio clip\r\n   *\r\n   * @example const duration = wavesurfer.getDuration();\r\n   * @return {number} Duration in seconds\r\n   */\r\n  getDuration() {\r\n    return this.backend.getDuration();\r\n  }\r\n\r\n  /**\r\n   * Get the current playback position\r\n   *\r\n   * @example const currentTime = wavesurfer.getCurrentTime();\r\n   * @return {number} Playback position in seconds\r\n   */\r\n  getCurrentTime() {\r\n    return this.backend.getCurrentTime();\r\n  }\r\n\r\n  /**\r\n   * Set the current play time in seconds.\r\n   *\r\n   * @param {number} seconds A positive number in seconds. E.g. 10 means 10\r\n   * seconds, 60 means 1 minute\r\n   */\r\n  setCurrentTime(seconds) {\r\n    if (seconds >= this.getDuration()) {\r\n      this.seekTo(1);\r\n    } else {\r\n      this.seekTo(seconds / this.getDuration());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starts playback from the current position. Optional start and end\r\n   * measured in seconds can be used to set the range of audio to play.\r\n   *\r\n   * @param {?number} start Position to start at\r\n   * @param {?number} end Position to end at\r\n   * @emits WaveSurfer#interaction\r\n   * @return {Promise}\r\n   * @example\r\n   * // play from second 1 to 5\r\n   * wavesurfer.play(1, 5);\r\n   */\r\n  play(start, end) {\r\n    this.fireEvent('interaction', () => this.play(start, end));\r\n    return this.backend.play(start, end);\r\n  }\r\n\r\n  /**\r\n   * Stops playback\r\n   *\r\n   * @example wavesurfer.pause();\r\n   * @return {Promise}\r\n   */\r\n  pause() {\r\n    if (!this.backend.isPaused()) {\r\n      return this.backend.pause();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle playback\r\n   *\r\n   * @example wavesurfer.playPause();\r\n   * @return {Promise}\r\n   */\r\n  playPause() {\r\n    return this.backend.isPaused() ? this.play() : this.pause();\r\n  }\r\n\r\n  /**\r\n   * Get the current playback state\r\n   *\r\n   * @example const isPlaying = wavesurfer.isPlaying();\r\n   * @return {boolean} False if paused, true if playing\r\n   */\r\n  isPlaying() {\r\n    return !this.backend.isPaused();\r\n  }\r\n\r\n  /**\r\n   * Skip backward\r\n   *\r\n   * @param {?number} seconds Amount to skip back, if not specified `skipLength`\r\n   * is used\r\n   * @example wavesurfer.skipBackward();\r\n   */\r\n  skipBackward(seconds) {\r\n    this.skip(-seconds || -this.params.skipLength);\r\n  }\r\n\r\n  /**\r\n   * Skip forward\r\n   *\r\n   * @param {?number} seconds Amount to skip back, if not specified `skipLength`\r\n   * is used\r\n   * @example wavesurfer.skipForward();\r\n   */\r\n  skipForward(seconds) {\r\n    this.skip(seconds || this.params.skipLength);\r\n  }\r\n\r\n  /**\r\n   * Skip a number of seconds from the current position (use a negative value\r\n   * to go backwards).\r\n   *\r\n   * @param {number} offset Amount to skip back or forwards\r\n   * @example\r\n   * // go back 2 seconds\r\n   * wavesurfer.skip(-2);\r\n   */\r\n  skip(offset) {\r\n    const duration = this.getDuration() || 1;\r\n    let position = this.getCurrentTime() || 0;\r\n    position = Math.max(0, Math.min(duration, position + (offset || 0)));\r\n    this.seekAndCenter(position / duration);\r\n  }\r\n\r\n  /**\r\n   * Seeks to a position and centers the view\r\n   *\r\n   * @param {number} progress Between 0 (=beginning) and 1 (=end)\r\n   * @example\r\n   * // seek and go to the middle of the audio\r\n   * wavesurfer.seekTo(0.5);\r\n   */\r\n  seekAndCenter(progress) {\r\n    this.seekTo(progress);\r\n    this.drawer.recenter(progress);\r\n  }\r\n\r\n  /**\r\n   * Seeks to a position\r\n   *\r\n   * @param {number} progress Between 0 (=beginning) and 1 (=end)\r\n   * @emits WaveSurfer#interaction\r\n   * @emits WaveSurfer#seek\r\n   * @example\r\n   * // seek to the middle of the audio\r\n   * wavesurfer.seekTo(0.5);\r\n   */\r\n  seekTo(progress) {\r\n    // return an error if progress is not a number between 0 and 1\r\n    if (\r\n      typeof progress !== 'number' ||\r\n      !isFinite(progress) ||\r\n      progress < 0 ||\r\n      progress > 1\r\n    ) {\r\n      return console.error(\r\n        'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\r\n      );\r\n    }\r\n    this.fireEvent('interaction', () => this.seekTo(progress));\r\n\r\n    const paused = this.backend.isPaused();\r\n    // avoid draw wrong position while playing backward seeking\r\n    if (!paused) {\r\n      this.backend.pause();\r\n    }\r\n    // avoid small scrolls while paused seeking\r\n    const oldScrollParent = this.params.scrollParent;\r\n    this.params.scrollParent = false;\r\n    this.backend.seekTo(progress * this.getDuration());\r\n    this.drawer.progress(progress);\r\n\r\n    if (!paused) {\r\n      this.backend.play();\r\n    }\r\n    this.params.scrollParent = oldScrollParent;\r\n    this.fireEvent('seek', progress);\r\n  }\r\n\r\n  /**\r\n   * Stops and goes to the beginning.\r\n   *\r\n   * @example wavesurfer.stop();\r\n   */\r\n  stop() {\r\n    this.pause();\r\n    this.seekTo(0);\r\n    this.drawer.progress(0);\r\n  }\r\n\r\n  /**\r\n   * Set the playback volume.\r\n   *\r\n   * @param {string} deviceId String value representing underlying output device\r\n   */\r\n  setSinkId(deviceId) {\r\n    return this.backend.setSinkId(deviceId);\r\n  }\r\n\r\n  /**\r\n   * Set the playback volume.\r\n   *\r\n   * @param {number} newVolume A value between 0 and 1, 0 being no\r\n   * volume and 1 being full volume.\r\n   * @emits WaveSurfer#volume\r\n   */\r\n  setVolume(newVolume) {\r\n    this.backend.setVolume(newVolume);\r\n    this.fireEvent('volume', newVolume);\r\n  }\r\n\r\n  /**\r\n   * Get the playback volume.\r\n   *\r\n   * @return {number} A value between 0 and 1, 0 being no\r\n   * volume and 1 being full volume.\r\n   */\r\n  getVolume() {\r\n    return this.backend.getVolume();\r\n  }\r\n\r\n  /**\r\n   * Set the playback rate.\r\n   *\r\n   * @param {number} rate A positive number. E.g. 0.5 means half the normal\r\n   * speed, 2 means double speed and so on.\r\n   * @example wavesurfer.setPlaybackRate(2);\r\n   */\r\n  setPlaybackRate(rate) {\r\n    this.backend.setPlaybackRate(rate);\r\n  }\r\n\r\n  /**\r\n   * Get the playback rate.\r\n   *\r\n   * @return {number}\r\n   */\r\n  getPlaybackRate() {\r\n    return this.backend.getPlaybackRate();\r\n  }\r\n\r\n  /**\r\n   * Toggle the volume on and off. It not currenly muted it will save the\r\n   * current volume value and turn the volume off. If currently muted then it\r\n   * will restore the volume to the saved value, and then rest the saved\r\n   * value.\r\n   *\r\n   * @example wavesurfer.toggleMute();\r\n   */\r\n  toggleMute() {\r\n    this.setMute(!this.isMuted);\r\n  }\r\n\r\n  /**\r\n   * Enable or disable muted audio\r\n   *\r\n   * @param {boolean} mute\r\n   * @emits WaveSurfer#volume\r\n   * @emits WaveSurfer#mute\r\n   * @example\r\n   * // unmute\r\n   * wavesurfer.setMute(false);\r\n   */\r\n  setMute(mute) {\r\n    // ignore all muting requests if the audio is already in that state\r\n    if (mute === this.isMuted) {\r\n      this.fireEvent('mute', this.isMuted);\r\n      return;\r\n    }\r\n\r\n    if (mute) {\r\n      // If currently not muted then save current volume,\r\n      // turn off the volume and update the mute properties\r\n      this.savedVolume = this.backend.getVolume();\r\n      this.backend.setVolume(0);\r\n      this.isMuted = true;\r\n      this.fireEvent('volume', 0);\r\n    } else {\r\n      // If currently muted then restore to the saved volume\r\n      // and update the mute properties\r\n      this.backend.setVolume(this.savedVolume);\r\n      this.isMuted = false;\r\n      this.fireEvent('volume', this.savedVolume);\r\n    }\r\n    this.fireEvent('mute', this.isMuted);\r\n  }\r\n\r\n  /**\r\n   * Get the current mute status.\r\n   *\r\n   * @example const isMuted = wavesurfer.getMute();\r\n   * @return {boolean}\r\n   */\r\n  getMute() {\r\n    return this.isMuted;\r\n  }\r\n\r\n  /**\r\n   * Get the current ready status.\r\n   *\r\n   * @example const isReady = wavesurfer.isReady();\r\n   * @return {boolean}\r\n   */\r\n  isReady() {\r\n    return this.isReady;\r\n  }\r\n\r\n  /**\r\n   * Get the list of current set filters as an array.\r\n   *\r\n   * Filters must be set with setFilters method first\r\n   *\r\n   * @return {array}\r\n   */\r\n  getFilters() {\r\n    return this.backend.filters || [];\r\n  }\r\n\r\n  /**\r\n   * Toggles `scrollParent` and redraws\r\n   *\r\n   * @example wavesurfer.toggleScroll();\r\n   */\r\n  toggleScroll() {\r\n    this.params.scrollParent = !this.params.scrollParent;\r\n    this.drawBuffer();\r\n  }\r\n\r\n  /**\r\n   * Toggle mouse interaction\r\n   *\r\n   * @example wavesurfer.toggleInteraction();\r\n   */\r\n  toggleInteraction() {\r\n    this.params.interact = !this.params.interact;\r\n  }\r\n\r\n  /**\r\n   * Get the fill color of the waveform after the cursor.\r\n   *\r\n   * @return {string} A CSS color string.\r\n   */\r\n  getWaveColor() {\r\n    return this.params.waveColor;\r\n  }\r\n\r\n  /**\r\n   * Set the fill color of the waveform after the cursor.\r\n   *\r\n   * @param {string} color A CSS color string.\r\n   * @example wavesurfer.setWaveColor('#ddd');\r\n   */\r\n  setWaveColor(color) {\r\n    this.params.waveColor = color;\r\n    this.drawBuffer();\r\n  }\r\n\r\n  /**\r\n   * Get the fill color of the waveform behind the cursor.\r\n   *\r\n   * @return {string} A CSS color string.\r\n   */\r\n  getProgressColor() {\r\n    return this.params.progressColor;\r\n  }\r\n\r\n  /**\r\n   * Set the fill color of the waveform behind the cursor.\r\n   *\r\n   * @param {string} color A CSS color string.\r\n   * @example wavesurfer.setProgressColor('#400');\r\n   */\r\n  setProgressColor(color) {\r\n    this.params.progressColor = color;\r\n    this.drawBuffer();\r\n  }\r\n\r\n  /**\r\n   * Get the fill color of the cursor indicating the playhead\r\n   * position.\r\n   *\r\n   * @return {string} A CSS color string.\r\n   */\r\n  getCursorColor() {\r\n    return this.params.cursorColor;\r\n  }\r\n\r\n  /**\r\n   * Set the fill color of the cursor indicating the playhead\r\n   * position.\r\n   *\r\n   * @param {string} color A CSS color string.\r\n   * @example wavesurfer.setCursorColor('#222');\r\n   */\r\n  setCursorColor(color) {\r\n    this.params.cursorColor = color;\r\n    this.drawer.updateCursor();\r\n  }\r\n\r\n  /**\r\n   * Get the height of the waveform.\r\n   *\r\n   * @return {number} Height measured in pixels.\r\n   */\r\n  getHeight() {\r\n    return this.params.height;\r\n  }\r\n\r\n  /**\r\n   * Set the height of the waveform.\r\n   *\r\n   * @param {number} height Height measured in pixels.\r\n   * @example wavesurfer.setHeight(200);\r\n   */\r\n  setHeight(height) {\r\n    this.params.height = height;\r\n    this.drawer.setHeight(height * this.params.pixelRatio);\r\n    this.drawBuffer();\r\n  }\r\n\r\n  /**\r\n   * Get the correct peaks for current wave viewport and render wave\r\n   *\r\n   * @private\r\n   * @emits WaveSurfer#redraw\r\n   */\r\n  drawBuffer() {\r\n    const nominalWidth = Math.round(\r\n      this.getDuration() *\r\n        this.params.minPxPerSec *\r\n        this.params.pixelRatio\r\n    );\r\n    const parentWidth = this.drawer.getWidth();\r\n    let width = nominalWidth;\r\n    let start = this.drawer.getScrollX();\r\n    let end = Math.max(start + parentWidth, width);\r\n    // Fill container\r\n    if (\r\n      this.params.fillParent &&\r\n      (!this.params.scrollParent || nominalWidth < parentWidth)\r\n    ) {\r\n      width = parentWidth;\r\n      start = 0;\r\n      end = width;\r\n    }\r\n\r\n    let peaks;\r\n    if (this.params.partialRender) {\r\n      const newRanges = this.peakCache.addRangeToPeakCache(\r\n        width,\r\n        start,\r\n        end\r\n      );\r\n      let i;\r\n      for (i = 0; i < newRanges.length; i++) {\r\n        peaks = this.backend.getPeaks(\r\n          width,\r\n          newRanges[i][0],\r\n          newRanges[i][1]\r\n        );\r\n        this.drawer.drawPeaks(\r\n          peaks,\r\n          width,\r\n          newRanges[i][0],\r\n          newRanges[i][1]\r\n        );\r\n      }\r\n    } else {\r\n      peaks = this.backend.getPeaks(width, start, end);\r\n      this.drawer.drawPeaks(peaks, width, start, end);\r\n    }\r\n    this.fireEvent('redraw', peaks, width);\r\n  }\r\n\r\n  /**\r\n   * Horizontally zooms the waveform in and out. It also changes the parameter\r\n   * `minPxPerSec` and enables the `scrollParent` option. Calling the function\r\n   * with a falsey parameter will reset the zoom state.\r\n   *\r\n   * @param {?number} pxPerSec Number of horizontal pixels per second of\r\n   * audio, if none is set the waveform returns to unzoomed state\r\n   * @emits WaveSurfer#zoom\r\n   * @example wavesurfer.zoom(20);\r\n   */\r\n  zoom(pxPerSec) {\r\n    if (!pxPerSec) {\r\n      this.params.minPxPerSec = this.defaultParams.minPxPerSec;\r\n      this.params.scrollParent = false;\r\n    } else {\r\n      this.params.minPxPerSec = pxPerSec;\r\n      this.params.scrollParent = true;\r\n    }\r\n\r\n    this.drawBuffer();\r\n    this.drawer.progress(this.backend.getPlayedPercents());\r\n\r\n    this.drawer.recenter(this.getCurrentTime() / this.getDuration());\r\n    this.fireEvent('zoom', pxPerSec);\r\n  }\r\n\r\n  /**\r\n   * Decode buffer and load\r\n   *\r\n   * @private\r\n   * @param {ArrayBuffer} arraybuffer\r\n   */\r\n  loadArrayBuffer(arraybuffer) {\r\n    this.decodeArrayBuffer(arraybuffer, data => {\r\n      if (!this.isDestroyed) {\r\n        this.loadDecodedBuffer(data);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Directly load an externally decoded AudioBuffer\r\n   *\r\n   * @private\r\n   * @param {AudioBuffer} buffer\r\n   * @emits WaveSurfer#ready\r\n   */\r\n  loadDecodedBuffer(buffer) {\r\n    this.backend.load(buffer);\r\n    this.drawBuffer();\r\n    this.fireEvent('ready');\r\n    this.isReady = true;\r\n  }\r\n\r\n  /**\r\n   * Loads audio data from a Blob or File object\r\n   *\r\n   * @param {Blob|File} blob Audio data\r\n   * @example\r\n   */\r\n  loadBlob(blob) {\r\n    // Create file reader\r\n    const reader = new FileReader();\r\n    reader.addEventListener('progress', e => this.onProgress(e));\r\n    reader.addEventListener('load', e =>\r\n      this.loadArrayBuffer(e.target.result)\r\n    );\r\n    reader.addEventListener('error', () =>\r\n      this.fireEvent('error', 'Error reading file')\r\n    );\r\n    reader.readAsArrayBuffer(blob);\r\n    this.empty();\r\n  }\r\n\r\n  /**\r\n   * Loads audio and re-renders the waveform.\r\n   *\r\n   * @param {string|HTMLMediaElement} url The url of the audio file or the\r\n   * audio element with the audio\r\n   * @param {?number[]|number[][]} peaks Wavesurfer does not have to decode\r\n   * the audio to render the waveform if this is specified\r\n   * @param {?string} preload (Use with backend `MediaElement`)\r\n   * `'none'|'metadata'|'auto'` Preload attribute for the media element\r\n   * @param {?number} duration The duration of the audio. This is used to\r\n   * render the peaks data in the correct size for the audio duration (as\r\n   * befits the current minPxPerSec and zoom value) without having to decode\r\n   * the audio.\r\n   * @example\r\n   * // using ajax or media element to load (depending on backend)\r\n   * wavesurfer.load('http://example.com/demo.wav');\r\n   *\r\n   * // setting preload attribute with media element backend and supplying\r\n   * peaks wavesurfer.load(\r\n   *   'http://example.com/demo.wav',\r\n   *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\r\n   *   true,\r\n   * );\r\n   */\r\n  load(url, peaks, preload, duration) {\r\n    this.empty();\r\n\r\n    if (preload) {\r\n      // check whether the preload attribute will be usable and if not log\r\n      // a warning listing the reasons why not and nullify the variable\r\n      const preloadIgnoreReasons = {\r\n        \"Preload is not 'auto', 'none' or 'metadata'\":\r\n          ['auto', 'metadata', 'none'].indexOf(preload) === -1,\r\n        'Peaks are not provided': !peaks,\r\n        'Backend is not of type MediaElement':\r\n          this.params.backend !== 'MediaElement',\r\n        'Url is not of type string': typeof url !== 'string'\r\n      };\r\n      const activeReasons = Object.keys(preloadIgnoreReasons).filter(\r\n        reason => preloadIgnoreReasons[reason]\r\n      );\r\n      if (activeReasons.length) {\r\n        console.warn(\r\n          'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\r\n            activeReasons.join('\\n\\t- ')\r\n        );\r\n        // stop invalid values from being used\r\n        preload = null;\r\n      }\r\n    }\r\n\r\n    switch (this.params.backend) {\r\n      case 'WebAudio':\r\n        return this.loadBuffer(url, peaks, duration);\r\n      case 'MediaElement':\r\n        return this.loadMediaElement(url, peaks, preload, duration);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads audio using Web Audio buffer backend.\r\n   *\r\n   * @private\r\n   * @param {string} url\r\n   * @param {?number[]|number[][]} peaks\r\n   * @param {?number} duration\r\n   */\r\n  loadBuffer(url, peaks, duration) {\r\n    const load = action => {\r\n      if (action) {\r\n        this.tmpEvents.push(this.once('ready', action));\r\n      }\r\n      return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\r\n    };\r\n\r\n    if (peaks) {\r\n      this.backend.setPeaks(peaks, duration);\r\n      this.drawBuffer();\r\n      this.tmpEvents.push(this.once('interaction', load));\r\n    } else {\r\n      return load();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Either create a media element, or load an existing media element.\r\n   *\r\n   * @private\r\n   * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\r\n   * existing HTML5 Audio/Video Element\r\n   * @param {number[]|number[][]} peaks Array of peaks. Required to bypass web audio\r\n   * dependency\r\n   * @param {?boolean} preload Set to true if the preload attribute of the\r\n   * audio element should be enabled\r\n   * @param {?number} duration\r\n   */\r\n  loadMediaElement(urlOrElt, peaks, preload, duration) {\r\n    let url = urlOrElt;\r\n\r\n    if (typeof urlOrElt === 'string') {\r\n      this.backend.load(url, this.mediaContainer, peaks, preload);\r\n    } else {\r\n      const elt = urlOrElt;\r\n      this.backend.loadElt(elt, peaks);\r\n\r\n      // If peaks are not provided,\r\n      // url = element.src so we can get peaks with web audio\r\n      url = elt.src;\r\n    }\r\n\r\n    this.tmpEvents.push(\r\n      this.backend.once('canplay', () => {\r\n        this.drawBuffer();\r\n        this.fireEvent('ready');\r\n        this.isReady = true;\r\n      }),\r\n      this.backend.once('error', err => this.fireEvent('error', err))\r\n    );\r\n\r\n    // If no pre-decoded peaks provided or pre-decoded peaks are\r\n    // provided with forceDecode flag, attempt to download the\r\n    // audio file and decode it with Web Audio.\r\n    if (peaks) {\r\n      this.backend.setPeaks(peaks, duration);\r\n    }\r\n\r\n    if (\r\n      (!peaks || this.params.forceDecode) &&\r\n      this.backend.supportsWebAudio()\r\n    ) {\r\n      this.getArrayBuffer(url, arraybuffer => {\r\n        this.decodeArrayBuffer(arraybuffer, buffer => {\r\n          this.backend.buffer = buffer;\r\n          this.backend.setPeaks(null);\r\n          this.drawBuffer();\r\n          this.fireEvent('waveform-ready');\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Decode an array buffer and pass data to a callback\r\n   *\r\n   * @private\r\n   * @param {Object} arraybuffer\r\n   * @param {function} callback\r\n   */\r\n  decodeArrayBuffer(arraybuffer, callback) {\r\n    this.arraybuffer = arraybuffer;\r\n\r\n    this.backend.decodeArrayBuffer(\r\n      arraybuffer,\r\n      data => {\r\n        // Only use the decoded data if we haven't been destroyed or\r\n        // another decode started in the meantime\r\n        if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\r\n          callback(data);\r\n          this.arraybuffer = null;\r\n        }\r\n      },\r\n      () => this.fireEvent('error', 'Error decoding audiobuffer')\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Load an array buffer by ajax and pass to a callback\r\n   *\r\n   * @param {string} url\r\n   * @param {function} callback\r\n   * @private\r\n   */\r\n  getArrayBuffer(url, callback) {\r\n    const ajax = util.ajax({\r\n      url: url,\r\n      responseType: 'arraybuffer',\r\n      xhr: this.params.xhr\r\n    });\r\n\r\n    this.currentAjax = ajax;\r\n\r\n    this.tmpEvents.push(\r\n      ajax.on('progress', e => {\r\n        this.onProgress(e);\r\n      }),\r\n      ajax.on('success', (data, e) => {\r\n        callback(data);\r\n        this.currentAjax = null;\r\n      }),\r\n      ajax.on('error', e => {\r\n        this.fireEvent('error', 'XHR error: ' + e.target.statusText);\r\n        this.currentAjax = null;\r\n      })\r\n    );\r\n\r\n    return ajax;\r\n  }\r\n\r\n  /**\r\n   * Called while the audio file is loading\r\n   *\r\n   * @private\r\n   * @param {Event} e\r\n   * @emits WaveSurfer#loading\r\n   */\r\n  onProgress(e) {\r\n    let percentComplete;\r\n    if (e.lengthComputable) {\r\n      percentComplete = e.loaded / e.total;\r\n    } else {\r\n      // Approximate progress with an asymptotic\r\n      // function, and assume downloads in the 1-3 MB range.\r\n      percentComplete = e.loaded / (e.loaded + 1000000);\r\n    }\r\n    this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\r\n  }\r\n\r\n  /**\r\n   * Exports PCM data into a JSON array and opens in a new window.\r\n   *\r\n   * @param {number} length=1024 The scale in which to export the peaks. (Integer)\r\n   * @param {number} accuracy=10000 (Integer)\r\n   * @param {?boolean} noWindow Set to true to disable opening a new\r\n   * window with the JSON\r\n   * @param {number} start\r\n   * @todo Update exportPCM to work with new getPeaks signature\r\n   * @return {string} JSON of peaks\r\n   */\r\n  exportPCM(length, accuracy, noWindow, start) {\r\n    length = length || 1024;\r\n    start = start || 0;\r\n    accuracy = accuracy || 10000;\r\n    noWindow = noWindow || false;\r\n    const peaks = this.backend.getPeaks(length, start);\r\n    const arr = [].map.call(\r\n      peaks,\r\n      val => Math.round(val * accuracy) / accuracy\r\n    );\r\n    const json = JSON.stringify(arr);\r\n    if (!noWindow) {\r\n      window.open(\r\n        'data:application/json;charset=utf-8,' +\r\n          encodeURIComponent(json)\r\n      );\r\n    }\r\n    return json;\r\n  }\r\n\r\n  /**\r\n   * Save waveform image as data URI.\r\n   *\r\n   * The default format is `image/png`. Other supported types are\r\n   * `image/jpeg` and `image/webp`.\r\n   *\r\n   * @param {string} format='image/png'\r\n   * @param {number} quality=1\r\n   * @return {string} data URI of image\r\n   */\r\n  exportImage(format, quality) {\r\n    if (!format) {\r\n      format = 'image/png';\r\n    }\r\n    if (!quality) {\r\n      quality = 1;\r\n    }\r\n\r\n    return this.drawer.getImage(format, quality);\r\n  }\r\n\r\n  /**\r\n   * Cancel any ajax request currently in progress\r\n   */\r\n  cancelAjax() {\r\n    if (this.currentAjax) {\r\n      this.currentAjax.xhr.abort();\r\n      this.currentAjax = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  clearTmpEvents() {\r\n    this.tmpEvents.forEach(e => e.un());\r\n  }\r\n\r\n  /**\r\n   * Display empty waveform.\r\n   */\r\n  empty() {\r\n    if (!this.backend.isPaused()) {\r\n      this.stop();\r\n      this.backend.disconnectSource();\r\n    }\r\n    this.isReady = false;\r\n    this.cancelAjax();\r\n    this.clearTmpEvents();\r\n    this.drawer.progress(0);\r\n    this.drawer.setWidth(0);\r\n    this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\r\n  }\r\n\r\n  /**\r\n   * Remove events, elements and disconnect WebAudio nodes.\r\n   *\r\n   * @emits WaveSurfer#destroy\r\n   */\r\n  destroy() {\r\n    this.destroyAllPlugins();\r\n    this.fireEvent('destroy');\r\n    this.cancelAjax();\r\n    this.clearTmpEvents();\r\n    this.unAll();\r\n    if (this.params.responsive !== false) {\r\n      window.removeEventListener('resize', this._onResize, true);\r\n      window.removeEventListener(\r\n        'orientationchange',\r\n        this._onResize,\r\n        true\r\n      );\r\n    }\r\n    this.backend.destroy();\r\n    this.drawer.destroy();\r\n    this.isDestroyed = true;\r\n    this.isReady = false;\r\n    this.arraybuffer = null;\r\n  }\r\n}\r\n","import Observer from './observer';\r\n\r\n/**\r\n * Perform an ajax request\r\n *\r\n * @param {Options} options Description\r\n *\r\n * @returns {Object} Observer instance\r\n */\r\nexport default function ajax(options) {\r\n  const instance = new Observer();\r\n  const xhr = new XMLHttpRequest();\r\n  let fired100 = false;\r\n  xhr.open(options.method || 'GET', options.url, true);\r\n  xhr.responseType = options.responseType || 'json';\r\n\r\n  if (options.xhr) {\r\n    if (options.xhr.requestHeaders) {\r\n      // add custom request headers\r\n      options.xhr.requestHeaders.forEach(header => {\r\n        xhr.setRequestHeader(header.key, header.value);\r\n      });\r\n    }\r\n    if (options.xhr.withCredentials) {\r\n      // use credentials\r\n      xhr.withCredentials = true;\r\n    }\r\n  }\r\n\r\n  xhr.addEventListener('progress', e => {\r\n    instance.fireEvent('progress', e);\r\n    if (e.lengthComputable && e.loaded == e.total) {\r\n      fired100 = true;\r\n    }\r\n  });\r\n  xhr.addEventListener('load', e => {\r\n    if (!fired100) {\r\n      instance.fireEvent('progress', e);\r\n    }\r\n    instance.fireEvent('load', e);\r\n    if (200 == xhr.status || 206 == xhr.status) {\r\n      instance.fireEvent('success', xhr.response, e);\r\n    } else {\r\n      instance.fireEvent('error', e);\r\n    }\r\n  });\r\n  xhr.addEventListener('error', e => instance.fireEvent('error', e));\r\n  xhr.send();\r\n  instance.xhr = xhr;\r\n  return instance;\r\n}\r\n","/**\r\n * Get a random prefixed ID\r\n *\r\n * @returns {String} Random ID\r\n */\r\nexport default function getId() {\r\n  return (\r\n    'wavesurfer_' +\r\n    Math.random()\r\n      .toString(32)\r\n      .substring(2)\r\n  );\r\n}\r\n","/**\r\n * Get the largest value\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number} Largest number found\r\n */\r\nexport default function max(values) {\r\n  let largest = -Infinity;\r\n  Object.keys(values).forEach(i => {\r\n    if (values[i] > largest) {\r\n      largest = values[i];\r\n    }\r\n  });\r\n  return largest;\r\n}\r\n","/**\r\n * Get the smallest value\r\n *\r\n * @param   {Array} values Array of numbers\r\n * @returns {Number}     Smallest number found\r\n */\r\nexport default function min(values) {\r\n  let smallest = Number(Infinity);\r\n  Object.keys(values).forEach(i => {\r\n    if (values[i] < smallest) {\r\n      smallest = values[i];\r\n    }\r\n  });\r\n  return smallest;\r\n}\r\n","/**\r\n * Extend an object shallowly with others\r\n *\r\n * @param {Object} dest The target object\r\n * @param {Object[]} sources The objects to use for extending\r\n *\r\n * @return {Object} Merged object\r\n */\r\nexport default function extend(dest, ...sources) {\r\n  sources.forEach(source => {\r\n    Object.keys(source).forEach(key => {\r\n      dest[key] = source[key];\r\n    });\r\n  });\r\n  return dest;\r\n}\r\n","/**\r\n * Apply a map of styles to an element\r\n *\r\n * @param {HTMLElement} el The element that the styles will be applied to\r\n * @param {Object} styles The map of propName: attribute, both are used as-is\r\n *\r\n * @return {HTMLElement} el\r\n */\r\nexport default function style(el, styles) {\r\n  Object.keys(styles).forEach(prop => {\r\n    if (el.style[prop] !== styles[prop]) {\r\n      el.style[prop] = styles[prop];\r\n    }\r\n  });\r\n  return el;\r\n}\r\n","import reqAnimationFrame from './request-animation-frame';\r\n\r\n/**\r\n * Create a function which will be called at the next requestAnimationFrame\r\n * cycle\r\n *\r\n * @param {function} func The function to call\r\n *\r\n * @return {func} The function wrapped within a requestAnimationFrame\r\n */\r\nexport default function frame(func) {\r\n  return (...args) => reqAnimationFrame(() => func(...args));\r\n}\r\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n  var last = Date.now() - timestamp;\n\n  if (last < wait && last >= 0) {\n    timeout = setTimeout(later, wait - last);\n  } else {\n    timeout = null;\n    if (!immediate) {\n    result = func.apply(context, args);\n    context = args = null;\n    }\n  }\n  };\n\n  var debounced = function(){\n  context = this;\n  args = arguments;\n  timestamp = Date.now();\n  var callNow = immediate && !timeout;\n  if (!timeout) timeout = setTimeout(later, wait);\n  if (callNow) {\n    result = func.apply(context, args);\n    context = args = null;\n  }\n\n  return result;\n  };\n\n  debounced.clear = function() {\n  if (timeout) {\n    clearTimeout(timeout);\n    timeout = null;\n  }\n  };\n  \n  debounced.flush = function() {\n  if (timeout) {\n    result = func.apply(context, args);\n    context = args = null;\n    \n    clearTimeout(timeout);\n    timeout = null;\n  }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","function preventClickHandler(e) {\r\n  e.stopPropagation();\r\n  document.body.removeEventListener('click', preventClickHandler, true);\r\n}\r\n\r\nexport default function preventClick(values) {\r\n  document.body.addEventListener('click', preventClickHandler, true);\r\n}\r\n","import Drawer from './drawer';\r\nimport * as util from './util';\r\n\r\n/**\r\n * @typedef {Object} CanvasEntry\r\n * @private\r\n * @property {HTMLElement} wave The wave node\r\n * @property {CanvasRenderingContext2D} waveCtx The canvas rendering context\r\n * @property {?HTMLElement} progress The progress wave node\r\n * @property {?CanvasRenderingContext2D} progressCtx The progress wave canvas\r\n * rendering context\r\n * @property {?number} start Start of the area the canvas should render, between 0 and 1\r\n * @property {?number} end End of the area the canvas should render, between 0 and 1\r\n */\r\n\r\n/**\r\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole built\r\n * in renderer.\r\n */\r\nexport default class MultiCanvas extends Drawer {\r\n  /**\r\n   * @param {HTMLElement} container The container node of the wavesurfer instance\r\n   * @param {WavesurferParams} params The wavesurfer initialisation options\r\n   */\r\n  constructor(container, params) {\r\n    super(container, params);\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxCanvasWidth = params.maxCanvasWidth;\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxCanvasElementWidth = Math.round(\r\n      params.maxCanvasWidth / params.pixelRatio\r\n    );\r\n\r\n    /**\r\n     * Whether or not the progress wave is renderered. If the `waveColor`\r\n     * and `progressColor` are the same colour it is not.\r\n     * @type {boolean}\r\n     */\r\n    this.hasProgressCanvas = params.waveColor != params.progressColor;\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.halfPixel = 0.5 / params.pixelRatio;\r\n    /**\r\n     * @private\r\n     * @type {Array}\r\n     */\r\n    this.canvases = [];\r\n    /** @private */\r\n    this.progressWave = null;\r\n  }\r\n\r\n  /**\r\n   * Initialise the drawer\r\n   */\r\n  init() {\r\n    this.createWrapper();\r\n    this.createElements();\r\n  }\r\n\r\n  /**\r\n   * Create the canvas elements and style them\r\n   *\r\n   * @private\r\n   */\r\n  createElements() {\r\n    this.progressWave = this.wrapper.appendChild(\r\n      this.style(document.createElement('wave'), {\r\n        position: 'absolute',\r\n        zIndex: 3,\r\n        left: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        overflow: 'hidden',\r\n        width: '0',\r\n        display: 'none',\r\n        boxSizing: 'border-box',\r\n        borderRightStyle: 'solid',\r\n        pointerEvents: 'none'\r\n      })\r\n    );\r\n\r\n    this.addCanvas();\r\n    this.updateCursor();\r\n  }\r\n\r\n  /**\r\n   * Update cursor style from params.\r\n   */\r\n  updateCursor() {\r\n    this.style(this.progressWave, {\r\n      borderRightWidth: this.params.cursorWidth + 'px',\r\n      borderRightColor: this.params.cursorColor\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adjust to the updated size by adding or removing canvases\r\n   */\r\n  updateSize() {\r\n    const totalWidth = Math.round(this.width / this.params.pixelRatio);\r\n    const requiredCanvases = Math.ceil(\r\n      totalWidth / this.maxCanvasElementWidth\r\n    );\r\n\r\n    while (this.canvases.length < requiredCanvases) {\r\n      this.addCanvas();\r\n    }\r\n\r\n    while (this.canvases.length > requiredCanvases) {\r\n      this.removeCanvas();\r\n    }\r\n\r\n    this.canvases.forEach((entry, i) => {\r\n      // Add some overlap to prevent vertical white stripes, keep the width even for simplicity.\r\n      let canvasWidth =\r\n        this.maxCanvasWidth + 2 * Math.ceil(this.params.pixelRatio / 2);\r\n\r\n      if (i == this.canvases.length - 1) {\r\n        canvasWidth =\r\n          this.width -\r\n          this.maxCanvasWidth * (this.canvases.length - 1);\r\n      }\r\n\r\n      this.updateDimensions(entry, canvasWidth, this.height);\r\n      this.clearWaveForEntry(entry);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add a canvas to the canvas list\r\n   *\r\n   * @private\r\n   */\r\n  addCanvas() {\r\n    const entry = {};\r\n    const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\r\n\r\n    entry.wave = this.wrapper.appendChild(\r\n      this.style(document.createElement('canvas'), {\r\n        position: 'absolute',\r\n        zIndex: 2,\r\n        left: leftOffset + 'px',\r\n        top: 0,\r\n        bottom: 0,\r\n        height: '100%',\r\n        pointerEvents: 'none'\r\n      })\r\n    );\r\n    entry.waveCtx = entry.wave.getContext('2d');\r\n\r\n    if (this.hasProgressCanvas) {\r\n      entry.progress = this.progressWave.appendChild(\r\n        this.style(document.createElement('canvas'), {\r\n          position: 'absolute',\r\n          left: leftOffset + 'px',\r\n          top: 0,\r\n          bottom: 0,\r\n          height: '100%'\r\n        })\r\n      );\r\n      entry.progressCtx = entry.progress.getContext('2d');\r\n    }\r\n\r\n    this.canvases.push(entry);\r\n  }\r\n\r\n  /**\r\n   * Pop one canvas from the list\r\n   *\r\n   * @private\r\n   */\r\n  removeCanvas() {\r\n    const lastEntry = this.canvases.pop();\r\n    lastEntry.wave.parentElement.removeChild(lastEntry.wave);\r\n    if (this.hasProgressCanvas) {\r\n      lastEntry.progress.parentElement.removeChild(lastEntry.progress);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the dimensions of a canvas element\r\n   *\r\n   * @private\r\n   * @param {CanvasEntry} entry\r\n   * @param {number} width The new width of the element\r\n   * @param {number} height The new height of the element\r\n   */\r\n  updateDimensions(entry, width, height) {\r\n    const elementWidth = Math.round(width / this.params.pixelRatio);\r\n    const totalWidth = Math.round(this.width / this.params.pixelRatio);\r\n\r\n    // Where the canvas starts and ends in the waveform, represented as a decimal between 0 and 1.\r\n    entry.start = entry.waveCtx.canvas.offsetLeft / totalWidth || 0;\r\n    entry.end = entry.start + elementWidth / totalWidth;\r\n\r\n    entry.waveCtx.canvas.width = width;\r\n    entry.waveCtx.canvas.height = height;\r\n    this.style(entry.waveCtx.canvas, { width: elementWidth + 'px' });\r\n\r\n    this.style(this.progressWave, { display: 'block' });\r\n\r\n    if (this.hasProgressCanvas) {\r\n      entry.progressCtx.canvas.width = width;\r\n      entry.progressCtx.canvas.height = height;\r\n      this.style(entry.progressCtx.canvas, {\r\n        width: elementWidth + 'px'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the whole waveform\r\n   */\r\n  clearWave() {\r\n    this.canvases.forEach(entry => this.clearWaveForEntry(entry));\r\n  }\r\n\r\n  /**\r\n   * Clear one canvas\r\n   *\r\n   * @private\r\n   * @param {CanvasEntry} entry\r\n   */\r\n  clearWaveForEntry(entry) {\r\n    entry.waveCtx.clearRect(\r\n      0,\r\n      0,\r\n      entry.waveCtx.canvas.width,\r\n      entry.waveCtx.canvas.height\r\n    );\r\n    if (this.hasProgressCanvas) {\r\n      entry.progressCtx.clearRect(\r\n        0,\r\n        0,\r\n        entry.progressCtx.canvas.width,\r\n        entry.progressCtx.canvas.height\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Draw a waveform with bars\r\n   *\r\n   * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\r\n   * rendering\r\n   * @param {number} channelIndex The index of the current channel. Normally\r\n   * should be 0. Must be an integer.\r\n   * @param {number} start The x-offset of the beginning of the area that\r\n   * should be rendered\r\n   * @param {number} end The x-offset of the end of the area that should be\r\n   * rendered\r\n   */\r\n  drawBars(peaks, channelIndex, start, end) {\r\n    return this.prepareDraw(\r\n      peaks,\r\n      channelIndex,\r\n      start,\r\n      end,\r\n      ({ absmax, hasMinVals, height, offsetY, halfH, peaks }) => {\r\n        // if drawBars was called within ws.empty we don't pass a start and\r\n        // don't want anything to happen\r\n        if (start === undefined) {\r\n          return;\r\n        }\r\n        // Skip every other value if there are negatives.\r\n        const peakIndexScale = hasMinVals ? 2 : 1;\r\n        const length = peaks.length / peakIndexScale;\r\n        const bar = this.params.barWidth * this.params.pixelRatio;\r\n        const gap =\r\n          this.params.barGap === null\r\n            ? Math.max(this.params.pixelRatio, ~~(bar / 2))\r\n            : Math.max(\r\n                this.params.pixelRatio,\r\n                this.params.barGap * this.params.pixelRatio\r\n              );\r\n        const step = bar + gap;\r\n\r\n        const scale = length / this.width;\r\n        const first = start;\r\n        const last = end;\r\n        let i;\r\n\r\n        for (i = first; i < last; i += step) {\r\n          const peak =\r\n            peaks[Math.floor(i * scale * peakIndexScale)] || 0;\r\n          const h = Math.round((peak / absmax) * halfH);\r\n          this.fillRect(\r\n            i + this.halfPixel,\r\n            halfH - h + offsetY,\r\n            bar + this.halfPixel,\r\n            h * 2\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Draw a waveform\r\n   *\r\n   * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\r\n   * rendering\r\n   * @param {number} channelIndex The index of the current channel. Normally\r\n   * should be 0\r\n   * @param {number?} start The x-offset of the beginning of the area that\r\n   * should be rendered (If this isn't set only a flat line is rendered)\r\n   * @param {number?} end The x-offset of the end of the area that should be\r\n   * rendered\r\n   */\r\n  drawWave(peaks, channelIndex, start, end) {\r\n    return this.prepareDraw(\r\n      peaks,\r\n      channelIndex,\r\n      start,\r\n      end,\r\n      ({ absmax, hasMinVals, height, offsetY, halfH, peaks }) => {\r\n        if (!hasMinVals) {\r\n          const reflectedPeaks = [];\r\n          const len = peaks.length;\r\n          let i;\r\n          for (i = 0; i < len; i++) {\r\n            reflectedPeaks[2 * i] = peaks[i];\r\n            reflectedPeaks[2 * i + 1] = -peaks[i];\r\n          }\r\n          peaks = reflectedPeaks;\r\n        }\r\n\r\n        // if drawWave was called within ws.empty we don't pass a start and\r\n        // end and simply want a flat line\r\n        if (start !== undefined) {\r\n          this.drawLine(peaks, absmax, halfH, offsetY, start, end);\r\n        }\r\n\r\n        // Always draw a median line\r\n        this.fillRect(\r\n          0,\r\n          halfH + offsetY - this.halfPixel,\r\n          this.width,\r\n          this.halfPixel\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Tell the canvas entries to render their portion of the waveform\r\n   *\r\n   * @private\r\n   * @param {number[]} peaks Peak data\r\n   * @param {number} absmax Maximum peak value (absolute)\r\n   * @param {number} halfH Half the height of the waveform\r\n   * @param {number} offsetY Offset to the top\r\n   * @param {number} start The x-offset of the beginning of the area that\r\n   * should be rendered\r\n   * @param {number} end The x-offset of the end of the area that\r\n   * should be rendered\r\n   */\r\n  drawLine(peaks, absmax, halfH, offsetY, start, end) {\r\n    this.canvases.forEach(entry => {\r\n      this.setFillStyles(entry);\r\n      this.drawLineToContext(\r\n        entry,\r\n        entry.waveCtx,\r\n        peaks,\r\n        absmax,\r\n        halfH,\r\n        offsetY,\r\n        start,\r\n        end\r\n      );\r\n      this.drawLineToContext(\r\n        entry,\r\n        entry.progressCtx,\r\n        peaks,\r\n        absmax,\r\n        halfH,\r\n        offsetY,\r\n        start,\r\n        end\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Render the actual waveform line on a canvas\r\n   *\r\n   * @private\r\n   * @param {CanvasEntry} entry\r\n   * @param {Canvas2DContextAttributes} ctx Essentially `entry.[wave|progress]Ctx`\r\n   * @param {number[]} peaks\r\n   * @param {number} absmax Maximum peak value (absolute)\r\n   * @param {number} halfH Half the height of the waveform\r\n   * @param {number} offsetY Offset to the top\r\n   * @param {number} start The x-offset of the beginning of the area that\r\n   * should be rendered\r\n   * @param {number} end The x-offset of the end of the area that\r\n   * should be rendered\r\n   */\r\n  drawLineToContext(entry, ctx, peaks, absmax, halfH, offsetY, start, end) {\r\n    if (!ctx) {\r\n      return;\r\n    }\r\n\r\n    const length = peaks.length / 2;\r\n    const scale =\r\n      this.params.fillParent && this.width != length\r\n        ? this.width / length\r\n        : 1;\r\n\r\n    const first = Math.round(length * entry.start);\r\n    // Use one more peak value to make sure we join peaks at ends -- unless,\r\n    // of course, this is the last canvas.\r\n    const last = Math.round(length * entry.end) + 1;\r\n    if (first > end || last < start) {\r\n      return;\r\n    }\r\n    const canvasStart = Math.min(first, start);\r\n    const canvasEnd = Math.max(last, end);\r\n    let i;\r\n    let j;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(\r\n      (canvasStart - first) * scale + this.halfPixel,\r\n      halfH + offsetY\r\n    );\r\n\r\n    for (i = canvasStart; i < canvasEnd; i++) {\r\n      const peak = peaks[2 * i] || 0;\r\n      const h = Math.round((peak / absmax) * halfH);\r\n      ctx.lineTo(\r\n        (i - first) * scale + this.halfPixel,\r\n        halfH - h + offsetY\r\n      );\r\n    }\r\n\r\n    // Draw the bottom edge going backwards, to make a single\r\n    // closed hull to fill.\r\n    for (j = canvasEnd - 1; j >= canvasStart; j--) {\r\n      const peak = peaks[2 * j + 1] || 0;\r\n      const h = Math.round((peak / absmax) * halfH);\r\n      ctx.lineTo(\r\n        (j - first) * scale + this.halfPixel,\r\n        halfH - h + offsetY\r\n      );\r\n    }\r\n\r\n    ctx.closePath();\r\n    ctx.fill();\r\n  }\r\n\r\n  /**\r\n   * Draw a rectangle on the waveform\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  fillRect(x, y, width, height) {\r\n    const startCanvas = Math.floor(x / this.maxCanvasWidth);\r\n    const endCanvas = Math.min(\r\n      Math.ceil((x + width) / this.maxCanvasWidth) + 1,\r\n      this.canvases.length\r\n    );\r\n    let i;\r\n    for (i = startCanvas; i < endCanvas; i++) {\r\n      const entry = this.canvases[i];\r\n      const leftOffset = i * this.maxCanvasWidth;\r\n\r\n      const intersection = {\r\n        x1: Math.max(x, i * this.maxCanvasWidth),\r\n        y1: y,\r\n        x2: Math.min(\r\n          x + width,\r\n          i * this.maxCanvasWidth + entry.waveCtx.canvas.width\r\n        ),\r\n        y2: y + height\r\n      };\r\n\r\n      if (intersection.x1 < intersection.x2) {\r\n        this.setFillStyles(entry);\r\n\r\n        this.fillRectToContext(\r\n          entry.waveCtx,\r\n          intersection.x1 - leftOffset,\r\n          intersection.y1,\r\n          intersection.x2 - intersection.x1,\r\n          intersection.y2 - intersection.y1\r\n        );\r\n\r\n        this.fillRectToContext(\r\n          entry.progressCtx,\r\n          intersection.x1 - leftOffset,\r\n          intersection.y1,\r\n          intersection.x2 - intersection.x1,\r\n          intersection.y2 - intersection.y1\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Performs preparation tasks and calculations which are shared by drawBars and drawWave\r\n   *\r\n   * @private\r\n   * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\r\n   * rendering\r\n   * @param {number} channelIndex The index of the current channel. Normally\r\n   * should be 0\r\n   * @param {number?} start The x-offset of the beginning of the area that\r\n   * should be rendered (If this isn't set only a flat line is rendered)\r\n   * @param {number?} end The x-offset of the end of the area that should be\r\n   * rendered\r\n   * @param {function} fn The render function to call\r\n   */\r\n  prepareDraw(peaks, channelIndex, start, end, fn) {\r\n    return util.frame(() => {\r\n      // Split channels and call this function with the channelIndex set\r\n      if (peaks[0] instanceof Array) {\r\n        const channels = peaks;\r\n        if (this.params.splitChannels) {\r\n          this.setHeight(\r\n            channels.length *\r\n              this.params.height *\r\n              this.params.pixelRatio\r\n          );\r\n          return channels.forEach((channelPeaks, i) =>\r\n            this.prepareDraw(channelPeaks, i, start, end, fn)\r\n          );\r\n        }\r\n        peaks = channels[0];\r\n      }\r\n      // calculate maximum modulation value, either from the barHeight\r\n      // parameter or if normalize=true from the largest value in the peak\r\n      // set\r\n      let absmax = 1 / this.params.barHeight;\r\n      if (this.params.normalize) {\r\n        const max = util.max(peaks);\r\n        const min = util.min(peaks);\r\n        absmax = -min > max ? -min : max;\r\n      }\r\n\r\n      // Bar wave draws the bottom only as a reflection of the top,\r\n      // so we don't need negative values\r\n      const hasMinVals = [].some.call(peaks, val => val < 0);\r\n      const height = this.params.height * this.params.pixelRatio;\r\n      const offsetY = height * channelIndex || 0;\r\n      const halfH = height / 2;\r\n\r\n      return fn({\r\n        absmax: absmax,\r\n        hasMinVals: hasMinVals,\r\n        height: height,\r\n        offsetY: offsetY,\r\n        halfH: halfH,\r\n        peaks: peaks\r\n      });\r\n    })();\r\n  }\r\n\r\n  /**\r\n   * Draw the actual rectangle on a canvas\r\n   *\r\n   * @private\r\n   * @param {Canvas2DContextAttributes} ctx\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  fillRectToContext(ctx, x, y, width, height) {\r\n    if (!ctx) {\r\n      return;\r\n    }\r\n    ctx.fillRect(x, y, width, height);\r\n  }\r\n\r\n  /**\r\n   * Set the fill styles for a certain entry (wave and progress)\r\n   *\r\n   * @private\r\n   * @param {CanvasEntry} entry\r\n   */\r\n  setFillStyles(entry) {\r\n    entry.waveCtx.fillStyle = this.params.waveColor;\r\n    if (this.hasProgressCanvas) {\r\n      entry.progressCtx.fillStyle = this.params.progressColor;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return image data of the waveform\r\n   *\r\n   * @param {string} type='image/png' An optional value of a format type.\r\n   * @param {number} quality=0.92 An optional value between 0 and 1.\r\n   * @return {string|string[]} images A data URL or an array of data URLs\r\n   */\r\n  getImage(type, quality) {\r\n    const images = this.canvases.map(entry =>\r\n      entry.wave.toDataURL(type, quality)\r\n    );\r\n    return images.length > 1 ? images : images[0];\r\n  }\r\n\r\n  /**\r\n   * Render the new progress\r\n   *\r\n   * @param {number} position X-Offset of progress position in pixels\r\n   */\r\n  updateProgress(position) {\r\n    this.style(this.progressWave, { width: position + 'px' });\r\n  }\r\n}\r\n","import * as util from './util';\r\n/**\r\n * Parent class for renderers\r\n *\r\n * @extends {Observer}\r\n */\r\nexport default class Drawer extends util.Observer {\r\n  /**\r\n   * @param {HTMLElement} container The container node of the wavesurfer instance\r\n   * @param {WavesurferParams} params The wavesurfer initialisation options\r\n   */\r\n  constructor(container, params) {\r\n    super();\r\n    /** @private */\r\n    this.container = container;\r\n    /**\r\n     * @type {WavesurferParams}\r\n     * @private\r\n     */\r\n    this.params = params;\r\n    /**\r\n     * The width of the renderer\r\n     * @type {number}\r\n     */\r\n    this.width = 0;\r\n    /**\r\n     * The height of the renderer\r\n     * @type {number}\r\n     */\r\n    this.height = params.height * this.params.pixelRatio;\r\n    /** @private */\r\n    this.lastPos = 0;\r\n    /**\r\n     * The `<wave>` element which is added to the container\r\n     * @type {HTMLElement}\r\n     */\r\n    this.wrapper = null;\r\n  }\r\n\r\n  /**\r\n   * Alias of `util.style`\r\n   *\r\n   * @param {HTMLElement} el The element that the styles will be applied to\r\n   * @param {Object} styles The map of propName: attribute, both are used as-is\r\n   * @return {HTMLElement} el\r\n   */\r\n  style(el, styles) {\r\n    return util.style(el, styles);\r\n  }\r\n\r\n  /**\r\n   * Create the wrapper `<wave>` element, style it and set up the events for\r\n   * interaction\r\n   */\r\n  createWrapper() {\r\n    this.wrapper = this.container.appendChild(\r\n      document.createElement('wave')\r\n    );\r\n\r\n    this.style(this.wrapper, {\r\n      display: 'block',\r\n      position: 'relative',\r\n      userSelect: 'none',\r\n      webkitUserSelect: 'none',\r\n      height: this.params.height + 'px'\r\n    });\r\n\r\n    if (this.params.fillParent || this.params.scrollParent) {\r\n      this.style(this.wrapper, {\r\n        width: '100%',\r\n        overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\r\n        overflowY: 'hidden'\r\n      });\r\n    }\r\n\r\n    this.setupWrapperEvents();\r\n  }\r\n\r\n  /**\r\n   * Handle click event\r\n   *\r\n   * @param {Event} e Click event\r\n   * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\r\n   * @return {number} Playback position from 0 to 1\r\n   */\r\n  handleEvent(e, noPrevent) {\r\n    !noPrevent && e.preventDefault();\r\n\r\n    const clientX = e.targetTouches\r\n      ? e.targetTouches[0].clientX\r\n      : e.clientX;\r\n    const bbox = this.wrapper.getBoundingClientRect();\r\n\r\n    const nominalWidth = this.width;\r\n    const parentWidth = this.getWidth();\r\n\r\n    let progress;\r\n\r\n    if (!this.params.fillParent && nominalWidth < parentWidth) {\r\n      progress =\r\n        (clientX - bbox.left) *\r\n          (this.params.pixelRatio / nominalWidth) || 0;\r\n\r\n      if (progress > 1) {\r\n        progress = 1;\r\n      }\r\n    } else {\r\n      progress =\r\n        (clientX - bbox.left + this.wrapper.scrollLeft) /\r\n          this.wrapper.scrollWidth || 0;\r\n    }\r\n\r\n    return progress;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  setupWrapperEvents() {\r\n    this.wrapper.addEventListener('click', e => {\r\n      const scrollbarHeight =\r\n        this.wrapper.offsetHeight - this.wrapper.clientHeight;\r\n      if (scrollbarHeight != 0) {\r\n        // scrollbar is visible.  Check if click was on it\r\n        const bbox = this.wrapper.getBoundingClientRect();\r\n        if (e.clientY >= bbox.bottom - scrollbarHeight) {\r\n          // ignore mousedown as it was on the scrollbar\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (this.params.interact) {\r\n        this.fireEvent('click', e, this.handleEvent(e));\r\n      }\r\n    });\r\n\r\n    this.wrapper.addEventListener('scroll', e =>\r\n      this.fireEvent('scroll', e)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Draw peaks on the canvas\r\n   *\r\n   * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\r\n   * rendering\r\n   * @param {number} length The width of the area that should be drawn\r\n   * @param {number} start The x-offset of the beginning of the area that\r\n   * should be rendered\r\n   * @param {number} end The x-offset of the end of the area that should be\r\n   * rendered\r\n   */\r\n  drawPeaks(peaks, length, start, end) {\r\n    if (!this.setWidth(length)) {\r\n      this.clearWave();\r\n    }\r\n\r\n    this.params.barWidth\r\n      ? this.drawBars(peaks, 0, start, end)\r\n      : this.drawWave(peaks, 0, start, end);\r\n  }\r\n\r\n  /**\r\n   * Scroll to the beginning\r\n   */\r\n  resetScroll() {\r\n    if (this.wrapper !== null) {\r\n      this.wrapper.scrollLeft = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recenter the viewport at a certain percent of the waveform\r\n   *\r\n   * @param {number} percent Value from 0 to 1 on the waveform\r\n   */\r\n  recenter(percent) {\r\n    const position = this.wrapper.scrollWidth * percent;\r\n    this.recenterOnPosition(position, true);\r\n  }\r\n\r\n  /**\r\n   * Recenter the viewport on a position, either scroll there immediately or\r\n   * in steps of 5 pixels\r\n   *\r\n   * @param {number} position X-offset in pixels\r\n   * @param {boolean} immediate Set to true to immediately scroll somewhere\r\n   */\r\n  recenterOnPosition(position, immediate) {\r\n    const scrollLeft = this.wrapper.scrollLeft;\r\n    const half = ~~(this.wrapper.clientWidth / 2);\r\n    const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\r\n    let target = position - half;\r\n    let offset = target - scrollLeft;\r\n\r\n    if (maxScroll == 0) {\r\n      // no need to continue if scrollbar is not there\r\n      return;\r\n    }\r\n\r\n    // if the cursor is currently visible...\r\n    if (!immediate && -half <= offset && offset < half) {\r\n      // we'll limit the \"re-center\" rate.\r\n      const rate = 5;\r\n      offset = Math.max(-rate, Math.min(rate, offset));\r\n      target = scrollLeft + offset;\r\n    }\r\n\r\n    // limit target to valid range (0 to maxScroll)\r\n    target = Math.max(0, Math.min(maxScroll, target));\r\n    // no use attempting to scroll if we're not moving\r\n    if (target != scrollLeft) {\r\n      this.wrapper.scrollLeft = target;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the current scroll position in pixels\r\n   *\r\n   * @return {number}\r\n   */\r\n  getScrollX() {\r\n    const pixelRatio = this.params.pixelRatio;\r\n    let x = Math.round(this.wrapper.scrollLeft * pixelRatio);\r\n\r\n    // In cases of elastic scroll (safari with mouse wheel) you can\r\n    // scroll beyond the limits of the container\r\n    // Calculate and floor the scrollable extent to make sure an out\r\n    // of bounds value is not returned\r\n    // Ticket #1312\r\n    if (this.params.scrollParent) {\r\n      const maxScroll = ~~(\r\n        this.wrapper.scrollWidth * pixelRatio -\r\n        this.getWidth()\r\n      );\r\n      x = Math.min(maxScroll, Math.max(0, x));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n  /**\r\n   * Get the width of the container\r\n   *\r\n   * @return {number}\r\n   */\r\n  getWidth() {\r\n    return Math.round(this.container.clientWidth * this.params.pixelRatio);\r\n  }\r\n\r\n  /**\r\n   * Set the width of the container\r\n   *\r\n   * @param {number} width\r\n   */\r\n  setWidth(width) {\r\n    if (this.width == width) {\r\n      return false;\r\n    }\r\n\r\n    this.width = width;\r\n\r\n    if (this.params.fillParent || this.params.scrollParent) {\r\n      this.style(this.wrapper, {\r\n        width: ''\r\n      });\r\n    } else {\r\n      this.style(this.wrapper, {\r\n        width: ~~(this.width / this.params.pixelRatio) + 'px'\r\n      });\r\n    }\r\n\r\n    this.updateSize();\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Set the height of the container\r\n   *\r\n   * @param {number} height\r\n   */\r\n  setHeight(height) {\r\n    if (height == this.height) {\r\n      return false;\r\n    }\r\n    this.height = height;\r\n\r\n    this.style(this.wrapper, {\r\n      height: ~~(this.height / this.params.pixelRatio) + 'px'\r\n    });\r\n\r\n    this.updateSize();\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Called by wavesurfer when progress should be renderered\r\n   *\r\n   * @param {number} progress From 0 to 1\r\n   */\r\n  progress(progress) {\r\n    const minPxDelta = 1 / this.params.pixelRatio;\r\n    const pos = Math.round(progress * this.width) * minPxDelta;\r\n\r\n    if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\r\n      this.lastPos = pos;\r\n\r\n      if (this.params.scrollParent && this.params.autoCenter) {\r\n        const newPos = ~~(this.wrapper.scrollWidth * progress);\r\n        this.recenterOnPosition(newPos);\r\n      }\r\n\r\n      this.updateProgress(pos);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This is called when wavesurfer is destroyed\r\n   */\r\n  destroy() {\r\n    this.unAll();\r\n    if (this.wrapper) {\r\n      if (this.wrapper.parentNode == this.container) {\r\n        this.container.removeChild(this.wrapper);\r\n      }\r\n      this.wrapper = null;\r\n    }\r\n  }\r\n\r\n  /* Renderer-specific methods */\r\n\r\n  /**\r\n   * Called after cursor related params have changed.\r\n   *\r\n   * @abstract\r\n   */\r\n  updateCursor() {}\r\n\r\n  /**\r\n   * Called when the size of the container changes so the renderer can adjust\r\n   *\r\n   * @abstract\r\n   */\r\n  updateSize() {}\r\n\r\n  /**\r\n   * Draw a waveform with bars\r\n   *\r\n   * @abstract\r\n   * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\r\n   * rendering\r\n   * @param {number} channelIndex The index of the current channel. Normally\r\n   * should be 0\r\n   * @param {number} start The x-offset of the beginning of the area that\r\n   * should be rendered\r\n   * @param {number} end The x-offset of the end of the area that should be\r\n   * rendered\r\n   */\r\n  drawBars(peaks, channelIndex, start, end) {}\r\n\r\n  /**\r\n   * Draw a waveform\r\n   *\r\n   * @abstract\r\n   * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\r\n   * rendering\r\n   * @param {number} channelIndex The index of the current channel. Normally\r\n   * should be 0\r\n   * @param {number} start The x-offset of the beginning of the area that\r\n   * should be rendered\r\n   * @param {number} end The x-offset of the end of the area that should be\r\n   * rendered\r\n   */\r\n  drawWave(peaks, channelIndex, start, end) {}\r\n\r\n  /**\r\n   * Clear the waveform\r\n   *\r\n   * @abstract\r\n   */\r\n  clearWave() {}\r\n\r\n  /**\r\n   * Render the new progress\r\n   *\r\n   * @abstract\r\n   * @param {number} position X-Offset of progress position in pixels\r\n   */\r\n  updateProgress(position) {}\r\n}\r\n","import WebAudio from './webaudio';\r\nimport * as util from './util';\r\n\r\n/**\r\n * MediaElement backend\r\n */\r\nexport default class MediaElement extends WebAudio {\r\n  /**\r\n   * Construct the backend\r\n   *\r\n   * @param {WavesurferParams} params\r\n   */\r\n  constructor(params) {\r\n    super(params);\r\n    /** @private */\r\n    this.params = params;\r\n\r\n    // Dummy media to catch errors\r\n    /** @private */\r\n    this.media = {\r\n      currentTime: 0,\r\n      duration: 0,\r\n      paused: true,\r\n      playbackRate: 1,\r\n      play() {},\r\n      pause() {},\r\n      volume: 0\r\n    };\r\n\r\n    /** @private */\r\n    this.mediaType = params.mediaType.toLowerCase();\r\n    /** @private */\r\n    this.elementPosition = params.elementPosition;\r\n    /** @private */\r\n    this.peaks = null;\r\n    /** @private */\r\n    this.playbackRate = 1;\r\n    /** @private */\r\n    this.volume = 1;\r\n    /** @private */\r\n    this.buffer = null;\r\n    /** @private */\r\n    this.onPlayEnd = null;\r\n  }\r\n\r\n  /**\r\n   * Initialise the backend, called in `wavesurfer.createBackend()`\r\n   */\r\n  init() {\r\n    this.setPlaybackRate(this.params.audioRate);\r\n    this.createTimer();\r\n  }\r\n\r\n  /**\r\n   * Create a timer to provide a more precise `audioprocess` event.\r\n   *\r\n   * @private\r\n   */\r\n  createTimer() {\r\n    const onAudioProcess = () => {\r\n      if (this.isPaused()) {\r\n        return;\r\n      }\r\n      this.fireEvent('audioprocess', this.getCurrentTime());\r\n\r\n      // Call again in the next frame\r\n      const requestAnimationFrame =\r\n        window.requestAnimationFrame ||\r\n        window.webkitRequestAnimationFrame;\r\n      requestAnimationFrame(onAudioProcess);\r\n    };\r\n\r\n    this.on('play', onAudioProcess);\r\n\r\n    // Update the progress one more time to prevent it from being stuck in case of lower framerates\r\n    this.on('pause', () => {\r\n      this.fireEvent('audioprocess', this.getCurrentTime());\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create media element with url as its source,\r\n   * and append to container element.\r\n   *\r\n   * @param {string} url Path to media file\r\n   * @param {HTMLElement} container HTML element\r\n   * @param {number[]|number[][]} peaks Array of peak data\r\n   * @param {string} preload HTML 5 preload attribute value\r\n   */\r\n  load(url, container, peaks, preload) {\r\n    const media = document.createElement(this.mediaType);\r\n    media.controls = this.params.mediaControls;\r\n    media.autoplay = this.params.autoplay || false;\r\n    media.preload = preload == null ? 'auto' : preload;\r\n    media.src = url;\r\n    media.style.width = '100%';\r\n\r\n    const prevMedia = container.querySelector(this.mediaType);\r\n    if (prevMedia) {\r\n      container.removeChild(prevMedia);\r\n    }\r\n    container.appendChild(media);\r\n\r\n    this._load(media, peaks);\r\n  }\r\n\r\n  /**\r\n   * Load existing media element.\r\n   *\r\n   * @param {HTMLMediaElement} elt HTML5 Audio or Video element\r\n   * @param {number[]|number[][]} peaks Array of peak data\r\n   */\r\n  loadElt(elt, peaks) {\r\n    elt.controls = this.params.mediaControls;\r\n    elt.autoplay = this.params.autoplay || false;\r\n\r\n    this._load(elt, peaks);\r\n  }\r\n\r\n  /**\r\n   * Private method called by both load (from url)\r\n   * and loadElt (existing media element).\r\n   *\r\n   * @param {HTMLMediaElement} media HTML5 Audio or Video element\r\n   * @param {number[]|number[][]} peaks Array of peak data\r\n   * @private\r\n   */\r\n  _load(media, peaks) {\r\n    // load must be called manually on iOS, otherwise peaks won't draw\r\n    // until a user interaction triggers load --> 'ready' event\r\n    if (typeof media.load == 'function') {\r\n      // Resets the media element and restarts the media resource. Any\r\n      // pending events are discarded. How much media data is fetched is\r\n      // still affected by the preload attribute.\r\n      media.load();\r\n    }\r\n\r\n    media.addEventListener('error', () => {\r\n      this.fireEvent('error', 'Error loading media element');\r\n    });\r\n\r\n    media.addEventListener('canplay', () => {\r\n      this.fireEvent('canplay');\r\n    });\r\n\r\n    media.addEventListener('ended', () => {\r\n      this.fireEvent('finish');\r\n    });\r\n\r\n    // Listen to and relay play and pause events to enable\r\n    // playback control from the external media element\r\n    media.addEventListener('play', () => {\r\n      this.fireEvent('play');\r\n    });\r\n\r\n    media.addEventListener('pause', () => {\r\n      this.fireEvent('pause');\r\n    });\r\n\r\n    this.media = media;\r\n    this.peaks = peaks;\r\n    this.onPlayEnd = null;\r\n    this.buffer = null;\r\n    this.setPlaybackRate(this.playbackRate);\r\n    this.setVolume(this.volume);\r\n  }\r\n\r\n  /**\r\n   * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  isPaused() {\r\n    return !this.media || this.media.paused;\r\n  }\r\n\r\n  /**\r\n   * Used by `wavesurfer.getDuration()`\r\n   *\r\n   * @return {number}\r\n   */\r\n  getDuration() {\r\n    if (this.explicitDuration) {\r\n      return this.explicitDuration;\r\n    }\r\n    let duration = (this.buffer || this.media).duration;\r\n    if (duration >= Infinity) {\r\n      // streaming audio\r\n      duration = this.media.seekable.end(0);\r\n    }\r\n    return duration;\r\n  }\r\n\r\n  /**\r\n   * Returns the current time in seconds relative to the audioclip's\r\n   * duration.\r\n   *\r\n   * @return {number}\r\n   */\r\n  getCurrentTime() {\r\n    return this.media && this.media.currentTime;\r\n  }\r\n\r\n  /**\r\n   * Get the position from 0 to 1\r\n   *\r\n   * @return {number}\r\n   */\r\n  getPlayedPercents() {\r\n    return this.getCurrentTime() / this.getDuration() || 0;\r\n  }\r\n\r\n  /**\r\n   * Get the audio source playback rate.\r\n   *\r\n   * @return {number}\r\n   */\r\n  getPlaybackRate() {\r\n    return this.playbackRate || this.media.playbackRate;\r\n  }\r\n\r\n  /**\r\n   * Set the audio source playback rate.\r\n   *\r\n   * @param {number} value\r\n   */\r\n  setPlaybackRate(value) {\r\n    this.playbackRate = value || 1;\r\n    this.media.playbackRate = this.playbackRate;\r\n  }\r\n\r\n  /**\r\n   * Used by `wavesurfer.seekTo()`\r\n   *\r\n   * @param {number} start Position to start at in seconds\r\n   */\r\n  seekTo(start) {\r\n    if (start != null) {\r\n      this.media.currentTime = start;\r\n    }\r\n    this.clearPlayEnd();\r\n  }\r\n\r\n  /**\r\n   * Plays the loaded audio region.\r\n   *\r\n   * @param {number} start Start offset in seconds, relative to the beginning\r\n   * of a clip.\r\n   * @param {number} end When to stop, relative to the beginning of a clip.\r\n   * @emits MediaElement#play\r\n   * @return {Promise}\r\n   */\r\n  play(start, end) {\r\n    this.seekTo(start);\r\n    const promise = this.media.play();\r\n    end && this.setPlayEnd(end);\r\n\r\n    return promise;\r\n  }\r\n\r\n  /**\r\n   * Pauses the loaded audio.\r\n   *\r\n   * @emits MediaElement#pause\r\n   * @return {Promise}\r\n   */\r\n  pause() {\r\n    let promise;\r\n\r\n    if (this.media) {\r\n      promise = this.media.pause();\r\n    }\r\n    this.clearPlayEnd();\r\n\r\n    return promise;\r\n  }\r\n\r\n  /** @private */\r\n  setPlayEnd(end) {\r\n    this._onPlayEnd = time => {\r\n      if (time >= end) {\r\n        this.pause();\r\n        this.seekTo(end);\r\n      }\r\n    };\r\n    this.on('audioprocess', this._onPlayEnd);\r\n  }\r\n\r\n  /** @private */\r\n  clearPlayEnd() {\r\n    if (this._onPlayEnd) {\r\n      this.un('audioprocess', this._onPlayEnd);\r\n      this._onPlayEnd = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Compute the max and min value of the waveform when broken into\r\n   * <length> subranges.\r\n   *\r\n   * @param {number} length How many subranges to break the waveform into.\r\n   * @param {number} first First sample in the required range.\r\n   * @param {number} last Last sample in the required range.\r\n   * @return {number[]|number[][]} Array of 2*<length> peaks or array of\r\n   * arrays of peaks consisting of (max, min) values for each subrange.\r\n   */\r\n  getPeaks(length, first, last) {\r\n    if (this.buffer) {\r\n      return super.getPeaks(length, first, last);\r\n    }\r\n    return this.peaks || [];\r\n  }\r\n\r\n  /**\r\n   * Set the sink id for the media player\r\n   *\r\n   * @param {string} deviceId String value representing audio device id.\r\n   */\r\n  setSinkId(deviceId) {\r\n    if (deviceId) {\r\n      if (!this.media.setSinkId) {\r\n        return Promise.reject(\r\n          new Error('setSinkId is not supported in your browser')\r\n        );\r\n      }\r\n      return this.media.setSinkId(deviceId);\r\n    }\r\n\r\n    return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\r\n  }\r\n\r\n  /**\r\n   * Get the current volume\r\n   *\r\n   * @return {number} value A floating point value between 0 and 1.\r\n   */\r\n  getVolume() {\r\n    return this.volume || this.media.volume;\r\n  }\r\n\r\n  /**\r\n   * Set the audio volume\r\n   *\r\n   * @param {number} value A floating point value between 0 and 1.\r\n   */\r\n  setVolume(value) {\r\n    this.volume = value;\r\n    this.media.volume = this.volume;\r\n  }\r\n\r\n  /**\r\n   * This is called when wavesurfer is destroyed\r\n   *\r\n   */\r\n  destroy() {\r\n    this.pause();\r\n    this.unAll();\r\n\r\n    if (\r\n      this.params.removeMediaElementOnDestroy &&\r\n      this.media &&\r\n      this.media.parentNode\r\n    ) {\r\n      this.media.parentNode.removeChild(this.media);\r\n    }\r\n\r\n    this.media = null;\r\n  }\r\n}\r\n","/**\r\n * Caches the decoded peaks data to improve rendering speed for lage audio\r\n *\r\n * Is used if the option parameter `partialRender` is set to `true`\r\n */\r\nexport default class PeakCache {\r\n  /**\r\n   * Instantiate cache\r\n   */\r\n  constructor() {\r\n    this.clearPeakCache();\r\n  }\r\n\r\n  /**\r\n   * Empty the cache\r\n   */\r\n  clearPeakCache() {\r\n    /**\r\n     * Flat array with entries that are always in pairs to mark the\r\n     * beginning and end of each subrange.  This is a convenience so we can\r\n     * iterate over the pairs for easy set difference operations.\r\n     * @private\r\n     */\r\n    this.peakCacheRanges = [];\r\n    /**\r\n     * Length of the entire cachable region, used for resetting the cache\r\n     * when this changes (zoom events, for instance).\r\n     * @private\r\n     */\r\n    this.peakCacheLength = -1;\r\n  }\r\n\r\n  /**\r\n   * Add a range of peaks to the cache\r\n   *\r\n   * @param {number} length The length of the range\r\n   * @param {number} start The x offset of the start of the range\r\n   * @param {number} end The x offset of the end of the range\r\n   * @return {number[][]}\r\n   */\r\n  addRangeToPeakCache(length, start, end) {\r\n    if (length != this.peakCacheLength) {\r\n      this.clearPeakCache();\r\n      this.peakCacheLength = length;\r\n    }\r\n\r\n    // Return ranges that weren't in the cache before the call.\r\n    let uncachedRanges = [];\r\n    let i = 0;\r\n    // Skip ranges before the current start.\r\n    while (\r\n      i < this.peakCacheRanges.length &&\r\n      this.peakCacheRanges[i] < start\r\n    ) {\r\n      i++;\r\n    }\r\n    // If |i| is even, |start| falls after an existing range.  Otherwise,\r\n    // |start| falls between an existing range, and the uncached region\r\n    // starts when we encounter the next node in |peakCacheRanges| or\r\n    // |end|, whichever comes first.\r\n    if (i % 2 == 0) {\r\n      uncachedRanges.push(start);\r\n    }\r\n    while (\r\n      i < this.peakCacheRanges.length &&\r\n      this.peakCacheRanges[i] <= end\r\n    ) {\r\n      uncachedRanges.push(this.peakCacheRanges[i]);\r\n      i++;\r\n    }\r\n    // If |i| is even, |end| is after all existing ranges.\r\n    if (i % 2 == 0) {\r\n      uncachedRanges.push(end);\r\n    }\r\n\r\n    // Filter out the 0-length ranges.\r\n    uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\r\n      if (pos == 0) {\r\n        return item != arr[pos + 1];\r\n      } else if (pos == arr.length - 1) {\r\n        return item != arr[pos - 1];\r\n      }\r\n      return item != arr[pos - 1] && item != arr[pos + 1];\r\n    });\r\n\r\n    // Merge the two ranges together, uncachedRanges will either contain\r\n    // wholly new points, or duplicates of points in peakCacheRanges.  If\r\n    // duplicates are detected, remove both and extend the range.\r\n    this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\r\n    this.peakCacheRanges = this.peakCacheRanges\r\n      .sort((a, b) => a - b)\r\n      .filter((item, pos, arr) => {\r\n        if (pos == 0) {\r\n          return item != arr[pos + 1];\r\n        } else if (pos == arr.length - 1) {\r\n          return item != arr[pos - 1];\r\n        }\r\n        return item != arr[pos - 1] && item != arr[pos + 1];\r\n      });\r\n\r\n    // Push the uncached ranges into an array of arrays for ease of\r\n    // iteration in the functions that call this.\r\n    const uncachedRangePairs = [];\r\n    for (i = 0; i < uncachedRanges.length; i += 2) {\r\n      uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\r\n    }\r\n\r\n    return uncachedRangePairs;\r\n  }\r\n\r\n  /**\r\n   * For testing\r\n   *\r\n   * @return {number[][]}\r\n   */\r\n  getCacheRanges() {\r\n    const peakCacheRangePairs = [];\r\n    let i;\r\n    for (i = 0; i < this.peakCacheRanges.length; i += 2) {\r\n      peakCacheRangePairs.push([\r\n        this.peakCacheRanges[i],\r\n        this.peakCacheRanges[i + 1]\r\n      ]);\r\n    }\r\n    return peakCacheRangePairs;\r\n  }\r\n}\r\n"],"sourceRoot":""}